"""
Periodic cleanup of sent notifications
"""

from datetime import datetime
from datetime import timedelta
from datetime import timezone

from common.config import Config
from common.logging import get_logger
from common.logging import init_logging
from taskomatic.jobs.common import get_conn

LOGGER = get_logger(__name__)

CFG = Config()


def run():
    """Job entrypoint"""
    LOGGER.info("Started delete_notifications job")
    current_date = datetime.now(timezone.utc).date()
    cve_deadline = current_date - timedelta(days=CFG.cve_freshness_threshold)

    conn = get_conn()
    cur = conn.cursor()

    cur.execute(
        """DELETE FROM notified_accounts AS na
                   WHERE na.cve_id IN (SELECT id
                                       FROM cve_metadata
                                       WHERE public_date < %s)
                    AND na.notif_type != 'any-cve-known-exploit'
                   RETURNING na.cve_id
                """,
        (cve_deadline,),
    )

    del_notifs = cur.rowcount
    cve_ids = [del_row[0] for del_row in cur]
    cves = set()
    if cve_ids:
        cur.execute("""SELECT cve FROM cve_metadata WHERE id IN %s""", (tuple(cve_ids),))
        cves = {cve[0] for cve in cur}
    conn.commit()
    cur.close()
    conn.close()

    LOGGER.info("Deleted %d sent notifications for CVEs: %s", del_notifs, cves)


if __name__ == "__main__":
    init_logging()
    run()
