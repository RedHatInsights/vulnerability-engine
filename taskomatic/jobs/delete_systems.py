"""
Periodic cleanup of deleted systems
"""

from datetime import datetime
from datetime import timedelta

import pytz

from common.config import Config
from common.logging import get_logger
from common.logging import init_logging
from taskomatic.jobs.common import get_conn

LOGGER = get_logger(__name__)

CFG = Config()


def run():
    """Application entrypoint"""
    LOGGER.info("Started delete_systems job.")

    conn = get_conn()
    cur = conn.cursor()
    deleted = 0

    while True:
        curr_time = datetime.now(tz=pytz.utc)
        cur.execute(
            """SELECT inventory_id from system_platform sp
                       WHERE when_deleted IS NOT NULL
                         AND when_deleted < %s
                       LIMIT 1 FOR UPDATE OF sp""",
            (curr_time - timedelta(hours=CFG.system_deletion_threshold),),
        )
        inventory_id = cur.fetchone()
        if not inventory_id:
            break
        cur.execute("""SELECT deleted_inventory_id FROM delete_system(%s)""", (inventory_id[0],))
        success = cur.fetchone()
        if success:
            deleted += 1
        else:
            LOGGER.error("Unable to delete inventory_id: %s", inventory_id)
        conn.commit()
    cur.close()
    conn.close()

    LOGGER.info("Cleared %s deleted systems.", deleted)

    LOGGER.info("Finished delete_systems job.")


if __name__ == "__main__":
    init_logging()
    run()
