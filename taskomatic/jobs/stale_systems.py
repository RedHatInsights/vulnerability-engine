"""
Periodic discovery of stale systems
"""

import os

import psycopg2
from psycopg2.extras import execute_values

DB_NAME = os.getenv('POSTGRESQL_DATABASE')
DB_USER = os.getenv('POSTGRESQL_USER')
DB_PASS = os.getenv('POSTGRESQL_PASSWORD')
DB_HOST = os.getenv('POSTGRESQL_HOST')
DB_PORT = int(os.getenv('POSTGRESQL_PORT', '5432'))

BATCH_SIZE = int(os.getenv('STALE_SYSTEMS_BATCH_SIZE', '10'))


def run():
    """Application entrypoint"""
    conn = psycopg2.connect(dbname=DB_NAME, user=DB_USER, password=DB_PASS, host=DB_HOST, port=DB_PORT)
    select_cur = conn.cursor()
    update_cur = conn.cursor()
    select_cur.execute("""SELECT id from system_platform
                    WHERE stale_warning_timestamp IS NOT NULL
                      AND stale = 'F'
                      AND now() > stale_warning_timestamp""")
    while True:
        rows = select_cur.fetchmany(size=BATCH_SIZE)
        if not rows:
            break
        execute_values(update_cur, """UPDATE system_platform AS sp SET stale = 'T' FROM (VALUES %s) AS v(id) WHERE sp.id = v.id""",
                       rows, page_size=len(rows))
        conn.commit()
    select_cur.close()
    update_cur.close()
    conn.close()
