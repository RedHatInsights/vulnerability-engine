"""
Periodic discovery of stale systems
"""
from common.logging import get_logger
from common.logging import init_logging
from taskomatic.jobs.common import get_conn


LOGGER = get_logger(__name__)


def run():
    """Application entrypoint"""
    LOGGER.info("Started stale_systems job.")

    conn = get_conn()
    cur = conn.cursor()

    query = """
        UPDATE system_platform
        SET stale = TRUE
        FROM (
            SELECT id
            FROM system_platform
            WHERE when_deleted IS NULL
            AND culled_timestamp IS NOT NULL
            AND stale = FALSE
            AND now() > culled_timestamp
            ORDER BY id
        ) AS subquery
        WHERE system_platform.id = subquery.id
    """
    cur.execute(query)
    LOGGER.info("Marked %s systems as stale", cur.rowcount)
    conn.commit()
    cur.close()

    cur = conn.cursor()
    query = """
        UPDATE system_platform
        SET when_deleted = now()
        FROM (
            SELECT id
            FROM system_platform
            WHERE when_deleted IS NULL
            AND culled_timestamp IS NOT NULL
            AND stale = TRUE
            AND now() > culled_timestamp + INTERVAL '1 day'
            ORDER BY id
        ) AS subquery
        WHERE system_platform.id = subquery.id
    """
    cur.execute(query)
    LOGGER.info("Marked %s systems which should be culled for deletion.", cur.rowcount)
    conn.commit()
    cur.close()

    conn.close()
    LOGGER.info("Finished stale_systems job.")


if __name__ == "__main__":
    init_logging()
    run()
