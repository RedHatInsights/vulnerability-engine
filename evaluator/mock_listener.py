#!/usr/bin/env python
"""
Mock listerner - not sure if still used
"""

import json
import logging
import time
import threading

from kafka import KafkaProducer


class Producer(threading.Thread):
    """Message producer"""
    def __init__(self):
        threading.Thread.__init__(self)
        self.stop_event = threading.Event()

    def stop(self):
        """Stopping the application"""
        self.stop_event.set()

    def run(self):
        producer = KafkaProducer(bootstrap_servers='ve_kafka:9092')

        msg_list = [
            {
                'type': 'vmaas_updates',
                'version': 1,
                'package_name_list': [
                    "kernel"
                ],
                'repository_list': [
                    'rhel-6-server-rpms'
                ],
                'releasever': '6Server',
                'basearch': "x86_64"
            },

            {
                'type': 'vmaas_cves',
                'version': 1,
                'cve_list': [
                    'CVE-2017-57'
                ]
            },

            {
                'type': 'vmaas_repos',
                'version': 1,
                'repo_list': [
                    'rhel-6-server-rpms',
                    'rhel-7-server-rpms'
                ]
            },

            {
                'type': 'inventory_new_system',
                'version': 1,
                'system_id': 'ID'
            },

            {
                'type': 'inventory_update_system',
                'version': 1,
                'system_id': 'ID'
            },

            {
                'type': 'security_rules',
                'version': 1,
                'system_id': 'ID',
                'rules': {
                    'JSON produced by rules engine'
                }
            },

        ]

        while not self.stop_event.is_set():
            msg_str = json.dumps(msg_list[3]).encode('ascii', 'ignore')
            producer.send('vulnerability_results', value=msg_str)

            time.sleep(3)

            msg_str = json.dumps(msg_list[0]).encode('ascii', 'ignore')
            producer.send('vulnerability_results', value=msg_str)

            time.sleep(3)

            msg_str = json.dumps(msg_list[1]).encode('ascii', 'ignore')
            producer.send('vulnerability_results', value=msg_str)

            time.sleep(3)

        producer.close()


def main():
    """Main function, runs the application"""
    tasks = [
        Producer(),
    ]

    # start all message processing tasks
    for task in tasks:
        task.start()

    for task in tasks:
        task.join()


if __name__ == "__main__":
    logging.basicConfig(
        format='%(asctime)s.%(msecs)s:%(name)s:%(thread)d:%(levelname)s:%(process)d:%(message)s',
        level=logging.INFO
    )
    main()
