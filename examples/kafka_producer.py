import os
import logging
import datetime
from confluent_kafka import Producer, KafkaError

BOOTSTRAP_SERVERS = 'kafka-1.vmaas-ci.svc:29092'
ENGINE_RESULTS_TOPIC = 'vulnerability_results'  # the topic to subscribe to for engine results'

def produceMessageCallback(err, msg):
    logging.info('Produce message callback err: %s' % (err))
    logging.info('Produce message callback msg: %s' % (msg))
    """ Called once for each message produced to indicate delivery result.
        Triggered by poll() or flush(). """
    if err is not None:
        logging.info('Message delivery failed: {}'.format(err))
    else:
        logging.info('Message delivered to {} [{}]'.format(msg.topic(), msg.partition()))

logging.basicConfig(level=logging.INFO)
logging.info("Using BOOTSTRAP_SERVERS: %s" % BOOTSTRAP_SERVERS)
logging.info("Using ENGINE_RESULTS_TOPIC: %s" % ENGINE_RESULTS_TOPIC)

p = Producer({'bootstrap.servers': BOOTSTRAP_SERVERS})

p.poll(0)
p.produce(ENGINE_RESULTS_TOPIC,
          "hello world",
          callback=produceMessageCallback)
p.flush()
