---
apiVersion: v1
kind: Template
metadata:
  name: vulnerability-engine
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: vulnerability-engine
  spec:
    envName: ${ENV_NAME}
    deployments:
    - name: advisor-listener
      webServices:
        public:
          enabled: false
        private:
          enabled: false
        metrics: {}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        minReplicas: ${{REPLICAS_ADVISOR_LISTENER}}
        command:
          - /engine/entrypoint.sh
          - advisor-listener
        env:
        - name: POSTGRESQL_USER
          value: ve_db_user_advisor_listener
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: advisor-listener-db-passwd
              name: vulnerability-db-passwds
        - name: LOGGING_TYPE
          value: OPENSHIFT
        - name: ADVISOR_RESULTS_TOPIC
          value: platform.engine.results
        - name: RETRY_INTERVAL
          value: '5'
        - name: WORKER_THREADS
          value: '30'
        - name: MAX_QUEUE_SIZE
          value: '30'
        - name: LOGGING_LEVEL_APP
          value: ${LOGGING_LEVEL_APP}
        - name: LOGGING_LEVEL_LIBS
          value: ${LOGGING_LEVEL_LIBS}
        - name: CW_ENABLED
          value: ${{CW_ENABLED}}
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: KAFKA_SSL_ENABLED
          value: ${KAFKA_SSL_ENABLED}
        - name: KAFKA_CA_CERT
          value: ${KAFKA_CA_CERT}
        - name: KAFKA_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: kafka-credentials
              optional: true
        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: kafka-credentials
              optional: true
        volumes:
        - name: kafka-cacert
          secret:
            secretName: kafka-ca
            optional: true
        volumeMounts:
        - mountPath: /opt/certs/
          name: kafka-cacert
          readOnly: true
        resources:
          limits:
            cpu: ${{CPU_LIMIT_ADVISOR_LISTENER}}
            memory: ${{MEMORY_LIMIT_ADVISOR_LISTENER}}
          requests:
            cpu: ${{CPU_REQUEST_ADVISOR_LISTENER}}
            memory: ${{MEMORY_REQUEST_ADVISOR_LISTENER}}

    - name: evaluator-recalc
      webServices:
        public:
          enabled: false
        private:
          enabled: false
        metrics: {}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        minReplicas: ${{REPLICAS_EVALUATOR_RECALC}}
        command:
          - /engine/entrypoint.sh
          - evaluator
        env:
        - name: POSTGRESQL_USER
          value: ve_db_user_evaluator
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: evaluator-db-passwd
              name: vulnerability-db-passwds
        - name: EVALUATOR_TOPIC
          value: vulnerability.evaluator.recalc
        - name: VMAAS_VULNERABILITIES_API
          value: /api/v1/vulnerabilities
        - name: LOGGING_TYPE
          value: OPENSHIFT
        - name: LOGGING_LEVEL_APP
          value: ${LOGGING_LEVEL_APP}
        - name: LOGGING_LEVEL_LIBS
          value: ${LOGGING_LEVEL_LIBS}
        - name: CW_ENABLED
          value: ${{CW_ENABLED}}
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: KAFKA_SSL_ENABLED
          value: ${KAFKA_SSL_ENABLED}
        - name: KAFKA_CA_CERT
          value: ${KAFKA_CA_CERT}
        - name: KAFKA_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: kafka-credentials
              optional: true
        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: kafka-credentials
              optional: true
        volumes:
        - name: kafka-cacert
          secret:
            secretName: kafka-ca
            optional: true
        volumeMounts:
        - mountPath: /opt/certs/
          name: kafka-cacert
          readOnly: true
        resources:
          limits:
            cpu: ${{CPU_LIMIT_EVALUATOR_RECALC}}
            memory: ${{MEMORY_LIMIT_EVALUATOR_RECALC}}
          requests:
            cpu: ${{CPU_REQUEST_EVALUATOR_RECALC}}
            memory: ${{MEMORY_REQUEST_EVALUATOR_RECALC}}

    - name: evaluator-upload
      webServices:
        public:
          enabled: false
        private:
          enabled: false
        metrics: {}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        minReplicas: ${{REPLICAS_EVALUATOR_UPLOAD}}
        command:
          - /engine/entrypoint.sh
          - evaluator
        env:
        - name: POSTGRESQL_USER
          value: ve_db_user_evaluator
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: evaluator-db-passwd
              name: vulnerability-db-passwds
        - name: EVALUATOR_TOPIC
          value: vulnerability.evaluator.upload
        - name: VMAAS_VULNERABILITIES_API
          value: /api/v1/vulnerabilities
        - name: LOGGING_TYPE
          value: OPENSHIFT
        - name: LOGGING_LEVEL_APP
          value: ${LOGGING_LEVEL_APP}
        - name: LOGGING_LEVEL_LIBS
          value: ${LOGGING_LEVEL_LIBS}
        - name: CW_ENABLED
          value: ${{CW_ENABLED}}
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: KAFKA_SSL_ENABLED
          value: ${KAFKA_SSL_ENABLED}
        - name: KAFKA_CA_CERT
          value: ${KAFKA_CA_CERT}
        - name: KAFKA_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: kafka-credentials
              optional: true
        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: kafka-credentials
              optional: true
        volumes:
        - name: kafka-cacert
          secret:
            secretName: kafka-ca
            optional: true
        volumeMounts:
        - mountPath: /opt/certs/
          name: kafka-cacert
          readOnly: true
        resources:
          limits:
            cpu: ${{CPU_LIMIT_EVALUATOR_UPLOAD}}
            memory: ${{MEMORY_LIMIT_EVALUATOR_UPLOAD}}
          requests:
            cpu: ${{CPU_REQUEST_EVALUATOR_UPLOAD}}
            memory: ${{MEMORY_REQUEST_EVALUATOR_UPLOAD}}
  
    - name: listener
      webServices:
        public:
          enabled: false
        private:
          enabled: false
        metrics: {}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        minReplicas: ${{REPLICAS_LISTENER}}
        command:
          - /engine/entrypoint.sh
          - listener
        env:
        - name: POSTGRESQL_USER
          value: ve_db_user_listener
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: listener-db-passwd
              name: vulnerability-db-passwds
        - name: EVALUATOR_TOPIC
          value: vulnerability.evaluator.upload
        - name: VMAAS_VULNERABILITIES_API
          value: /api/v1/vulnerabilities
        - name: LOGGING_TYPE
          value: OPENSHIFT
        - name: LOGGING_LEVEL_APP
          value: ${LOGGING_LEVEL_APP}
        - name: LOGGING_LEVEL_LIBS
          value: ${LOGGING_LEVEL_LIBS}
        - name: CW_ENABLED
          value: ${{CW_ENABLED}}
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: MESSAGE_TOPIC
          value: vulnerability.evaluator.upload
        - name: EVENTS_TOPIC
          value: platform.inventory.events
        - name: RETRY_INTERVAL
          value: '5'
        - name: MAX_ARCHIVE_RETRIES
          value: '2'
        - name: WORKER_THREADS
          value: '30'
        - name: MAX_QUEUE_SIZE
          value: '30'
        - name: DISABLE_OPTIMISATION
          value: 'False'
        - name: SKIP_ENTITLEMENT_CHECK
          value: 'FALSE'
        - name: KAFKA_SSL_ENABLED
          value: ${KAFKA_SSL_ENABLED}
        - name: KAFKA_CA_CERT
          value: ${KAFKA_CA_CERT}
        - name: KAFKA_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: kafka-credentials
              optional: true
        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: kafka-credentials
              optional: true
        volumes:
        - name: kafka-cacert
          secret:
            secretName: kafka-ca
            optional: true
        volumeMounts:
        - mountPath: /opt/certs/
          name: kafka-cacert
          readOnly: true
        resources:
          limits:
            cpu: ${{CPU_LIMIT_LISTENER}}
            memory: ${{MEMORY_LIMIT_LISTENER}}
          requests:
            cpu: ${{CPU_REQUEST_LISTENER}}
            memory: ${{MEMORY_REQUEST_LISTENER}}

    - name: manager
      webServices:
        public:
          enabled: true
        private:
          enabled: false
        metrics: {}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        minReplicas: ${{REPLICAS_MANAGER}}
        initContainers:
          - command: 
            - sh
            - -c
            - >-
              python3 -m database.upgrade.upgrade && if [ "${MANIFEST_PUSH}" == "TRUE" ]; then
              /push_manifest.sh
              RedHatInsights/manifests ${MANIFEST_BRANCH} /engine/manifest.txt
              vulnerability-engine/vulnerability-engine-app.txt; fi
            env:
            - name: DB_UPGRADE_SCRIPTS_DIR
              value: /engine/database/schema/upgrade_scripts/
            - name: GIT_TOKEN
              valueFrom:
                secretKeyRef:
                  key: GIT_TOKEN
                  name: github-vulnerability-bot
            - name: CLOWDER_ENABLED
              value: ${CLOWDER_ENABLED}
            - name: CW_ENABLED
              value: ${{CW_ENABLED}}
            - name: MANIFEST_BRANCH
              value: ${{MANIFEST_BRANCH}}
            - name: MANIFEST_PUSH
              value: ${{MANIFEST_PUSH}}
        command:
          - /engine/entrypoint.sh
          - manager
        env:
        - name: POSTGRESQL_USER
          value: ve_db_user_manager
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: manager-db-passwd
              name: vulnerability-db-passwds
        - name: PATH_PREFIX
          value: /api
        - name: APP_NAME
          value: vulnerability
        - name: API_VERSION
          value: v1
        - name: LOGGING_TYPE
          value: OPENSHIFT
        - name: LOGGING_LEVEL_APP
          value: ${LOGGING_LEVEL_APP}
        - name: LOGGING_LEVEL_LIBS
          value: ${LOGGING_LEVEL_LIBS}
        - name: CW_ENABLED
          value: ${{CW_ENABLED}}
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: READ_ONLY_MODE
          value: ${READ_ONLY_MODE}
        - name: GUNICORN_WORKERS
          value: '4'
        - name: SKIP_ENTITLEMENT_CHECK
          value: 'FALSE'
        - name: SLACK_WEBHOOK
          valueFrom:
            secretKeyRef:
              key: slack_webhook
              name: vulnerability-slack
        - name: VULNERABILITY_ENV
          value: ${VULNERABILITY_ENV}
        - name: CYNDI_ENABLED
          value: ${CYNDI_ENABLED}
        - name: REQUEST_RETRIES
          value: '10'
        - name: PATCH_ADVISORIES_API
          value: ${PATCH_ADVISORIES_API}
        - name: PATCH_VIEWS_ADVISORIES_API
          value: ${PATCH_VIEWS_ADVISORIES_API}
        - name: PATCH_ID_QUERY_FILTER
          value: ${PATCH_ID_QUERY_FILTER}
        - name: DASHBOARD_RULES_AGE
          value: '30'
        resources:
          limits:
            cpu: ${{CPU_LIMIT_MANAGER}}
            memory: ${{MEMORY_LIMIT_MANAGER}}
          requests:
            cpu: ${{CPU_REQUEST_MANAGER}}
            memory: ${{MEMORY_REQUEST_MANAGER}}

    - name: manager-admin
      webServices:
        public:
          enabled: true
        private:
          enabled: false
        metrics: {}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        minReplicas: ${{REPLICAS_MANAGER_ADMIN}}
        command:
          - /engine/entrypoint.sh
          - manager-admin
        env:
        - name: POSTGRESQL_USER
          value: ve_db_user_manager
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: manager-db-passwd
              name: vulnerability-db-passwds
        - name: PATH_PREFIX
          value: /api
        - name: APP_NAME
          value: vulnerability
        - name: API_VERSION
          value: v1
        - name: LOGGING_TYPE
          value: OPENSHIFT
        - name: LOGGING_LEVEL_APP
          value: ${LOGGING_LEVEL_APP}
        - name: LOGGING_LEVEL_LIBS
          value: ${LOGGING_LEVEL_LIBS}
        - name: CW_ENABLED
          value: ${{CW_ENABLED}}
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: GUNICORN_WORKERS
          value: '1'
        - name: SLACK_WEBHOOK
          valueFrom:
            secretKeyRef:
              key: slack_webhook
              name: vulnerability-slack
        - name: VULNERABILITY_ENV
          value: ${VULNERABILITY_ENV}
        resources:
          limits:
            cpu: ${{CPU_LIMIT_MANAGER_ADMIN}}
            memory: ${{MEMORY_LIMIT_MANAGER_ADMIN}}
          requests:
            cpu: ${{CPU_REQUEST_MANAGER_ADMIN}}
            memory: ${{MEMORY_REQUEST_MANAGER_ADMIN}}

    - name: taskomatic
      webServices:
        public:
          enabled: false
        private:
          enabled: true
        metrics: {}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        minReplicas: ${{REPLICAS_TASKOMATIC}}
        command:
          - /engine/entrypoint.sh
          - taskomatic
        env:
        - name: POSTGRESQL_USER
          value: ve_db_user_taskomatic
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: taskomatic-db-passwd
              name: vulnerability-db-passwds
        - name: JOBS
          value: ${JOBS}
        - name: CONTENT_GIT_REPO
          value: ${CONTENT_GIT}
        - name: PLAYBOOKS_GIT_REPO
          value: https://github.com/RedHatInsights/insights-playbooks.git
        - name: GIT_TOKEN
          valueFrom:
            secretKeyRef:
              key: GIT_TOKEN
              name: github-vulnerability-bot
        - name: LOGGING_TYPE
          value: OPENSHIFT
        - name: LOGGING_LEVEL_APP
          value: ${LOGGING_LEVEL_APP}
        - name: LOGGING_LEVEL_LIBS
          value: ${LOGGING_LEVEL_LIBS}
        - name: CW_ENABLED
          value: ${{CW_ENABLED}}
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: SYSTEM_DELETION_THRESHOLD
          value: ${SYSTEM_DELETION_THRESHOLD}
        - name: SLACK_WEBHOOK
          valueFrom:
            secretKeyRef:
              key: slack_webhook
              name: vulnerability-slack
        - name: VULNERABILITY_ENV
          value: ${VULNERABILITY_ENV}
        resources:
          limits:
            cpu: ${{CPU_LIMIT_TASKOMATIC}}
            memory: ${{MEMORY_LIMIT_TASKOMATIC}}
          requests:
            cpu: ${{CPU_REQUEST_TASKOMATIC}}
            memory: ${{MEMORY_REQUEST_TASKOMATIC}}

    - name: vmaas-sync
      webServices:
        public:
          enabled: false
        private:
          enabled: true
        metrics: {}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        minReplicas: ${{REPLICAS_VMAAS_SYNC}}
        command:
          - /engine/entrypoint.sh
          - vmaas-sync
        env:
        - name: POSTGRESQL_USER
          value: ve_db_user_vmaas_sync
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: vmaassync-db-passwd
              name: vulnerability-db-passwds
        - name: LOGGING_TYPE
          value: OPENSHIFT
        - name: LOGGING_LEVEL_APP
          value: ${LOGGING_LEVEL_APP}
        - name: LOGGING_LEVEL_LIBS
          value: ${LOGGING_LEVEL_LIBS}
        - name: MESSAGE_TOPIC
          value: vulnerability.evaluator.recalc
        - name: ENABLE_RE_EVALUATION
          value: 'YES'
        - name: ENABLE_REPO_BASED_RE_EVALUATION
          value: 'YES'
        - name: RE_EVALUATION_KAFKA_BATCH_SIZE
          value: '10000'
        - name: RE_EVALUATION_KAFKA_BATCHES
          value: '10'
        - name: REQUEST_RETRIES
          value: '10'
        - name: CW_ENABLED
          value: ${{CW_ENABLED}}
        - name: CLOWDER_ENABLED
          value: ${CLOWDER_ENABLED}
        - name: BO_PROXY_HOST
          value: ${BO_PROXY_HOST}
        - name: X_RH_CLIENTID
          value: ${X_RH_CLIENTID}
        - name: X_RH_INSIGHTS_ENV
          value: ${X_RH_INSIGHTS_ENV}
        - name: X_RH_APITOKEN
          valueFrom:
            secretKeyRef:
              key: x_rh_apitoken
              name: vulnerability-boproxy-token
        - name: BOP_CA_CERT
          valueFrom:
            secretKeyRef:
              key: ca_cert
              name: vulnerability-boproxy-token
        - name: KAFKA_SSL_ENABLED
          value: ${KAFKA_SSL_ENABLED}
        - name: KAFKA_CA_CERT
          value: ${KAFKA_CA_CERT}
        - name: KAFKA_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: kafka-credentials
              optional: true
        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: kafka-credentials
              optional: true
        volumes:
        - name: kafka-cacert
          secret:
            secretName: kafka-ca
            optional: true
        volumeMounts:
        - mountPath: /opt/certs/
          name: kafka-cacert
          readOnly: true
        resources:
          limits:
            cpu: ${{CPU_LIMIT_VMAAS_SYNC}}
            memory: ${{MEMORY_LIMIT_VMAAS_SYNC}}
          requests:
            cpu: ${{CPU_REQUEST_VMAAS_SYNC}}
            memory: ${{MEMORY_REQUEST_VMAAS_SYNC}}

    kafkaTopics:
    - replicas: 3
      partitions: 64
      topicName: platform.inventory.events
    - replicas: 3
      partitions: 24
      topicName: vulnerability.evaluator.upload
    - replicas: 3
      partitions: 8
      topicName: platform.payload-status
    - replicas: 3
      partitions: 3
      topicName: platform.engine.results
    - replicas: 3
      partitions: 3
      topicName: platform.remediation-updates.vulnerability
    - replicas: 3
      partitions: 24
      topicName: vulnerability.evaluator.recalc

    jobs:
    - name: metrics
      schedule: ${SCHEDULE}
      restartPolicy: OnFailure
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        command:
        - /engine/entrypoint.sh
        - metrics
        env:
        - name: POSTGRESQL_USER
          value: ve_db_user_metrics
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: metrics-db-passwd
              name: vulnerability-db-passwds
        - name: BOP_CA_CERT
          valueFrom:
            secretKeyRef:
              key: ca_cert
              name: vulnerability-boproxy-token
        - name: EXCLUDE_ACCOUNTS
          valueFrom:
            secretKeyRef:
              key: exclude_accounts
              name: vulnerability-metrics-exclude-accounts
        - name: BO_PROXY_HOST
          value: ${BO_PROXY_HOST}
        - name: X_RH_CLIENTID
          value: ${X_RH_CLIENTID}
        - name: X_RH_INSIGHTS_ENV
          value: ${X_RH_INSIGHTS_ENV}
        - name: X_RH_APITOKEN
          valueFrom:
            secretKeyRef:
              key: x_rh_apitoken
              name: vulnerability-boproxy-token



    dependencies:
    - host-inventory
    - ingress
    - engine
    - vmaas
    # optionalDependencies:
    # - patchman-engine  # not using Clowder yet
    database:
      name: vulnerability
    objectStore:
      - ${X_RH_CLIENTID}
    cyndi:
      enabled: false  # disable Cyndi for now in clowder/ephemeral
      appName: vulnerability-engine
      insightsOnly: true

- apiVersion: v1
  data:
    admin-db-passwd: dmVfZGJfYWRtaW5fcHdk
    advisor-listener-db-passwd: dmVfZGJfdXNlcl9hZHZpc29yX2xpc3RlbmVyX3B3ZA==
    cyndi-db-admin-passwd: Y3luZGlfZGJfYWRtaW5fcHdk
    evaluator-db-passwd: dmVfZGJfdXNlcl9ldmFsdWF0b3JfcHdk
    listener-db-passwd: dmVfZGJfdXNlcl9saXN0ZW5lcl9wd2Q=
    manager-db-passwd: dmVfZGJfdXNlcl9tYW5hZ2VyX3B3ZA==
    metrics-db-passwd: dmVfZGJfdXNlcl9tZXRyaWNzX3B3ZA==
    taskomatic-db-passwd: dmVfZGJfdXNlcl90YXNrb21hdGljX3B3ZA==
    vmaassync-db-passwd: dmVfZGJfdXNlcl92bWFhc19zeW5jX3B3ZA==
  kind: Secret
  metadata:
    name: vulnerability-db-passwds
    namespace: test  # namespace is overwritten by bonfire
  type: Opaque

- apiVersion: v1
  data:
    slack_webhook: ""
  kind: Secret
  metadata:
    name: vulnerability-slack
    namespace: test  # namespace is overwritten by bonfire
  type: Opaque

- apiVersion: v1
  data:
    ca_cert: ""
    x_rh_apitoken: ""
  kind: Secret
  metadata:
    name: vulnerability-boproxy-token
    namespace: test  # namespace is overwritten by bonfire
  type: Opaque

- apiVersion: v1
  data:
    exclude_accounts: ""
  kind: Secret
  metadata:
    name: vulnerability-metrics-exclude-accounts
    namespace: test  # namespace is overwritten by bonfire
  type: Opaque

- apiVersion: v1
  data:
    username: ""
    password: ""
  kind: Secret
  metadata:
    name: kafka-credentials
    namespace: test  # namespace is overwritten by bonfire
  type: Opaque

- apiVersion: v1
  data:
    kafka-cacert: ""
  kind: Secret
  metadata:
    name: kafka-ca
    namespace: test  # namespace is overwritten by bonfire
  type: Opaque

parameters:
- description: Image tag
  name: IMAGE_TAG
  required: true
- description: Image name
  name: IMAGE
  value: quay.io/cloudservices/vulnerability-engine-app
- description: Determines Clowder deployment
  name: CLOWDER_ENABLED
  value: "True"
- description: ClowdEnv Name
  name: ENV_NAME
  required: false
- name: CW_ENABLED
  description: CloudWatch enabled
  value: 'FALSE'  # 'TRUE' on Prod
# REPLICAS
- name: REPLICAS_ADVISOR_LISTENER
  description: advisor-listener replica count
  value: '1'  # 3 if 'prod'
- name: REPLICAS_EVALUATOR_RECALC
  description: evaluator-recalc replica count
  value: '1'  # 2 if 'prod'
- name: REPLICAS_EVALUATOR_UPLOAD
  description: evaluator-upload replica count
  value: '1'  # 2 if 'prod'
- name: REPLICAS_LISTENER
  description: listener replica count
  value: '1'  # 2 if 'prod'
- name: REPLICAS_MANAGER
  description: manager replica count
  value: '1'  # 4 if 'prod'
- name: REPLICAS_MANAGER_ADMIN
  description: manager-admin replica count
  value: '1'
- name: REPLICAS_TASKOMATIC
  description: taskomatic replica count
  value: '1'
- name: REPLICAS_VMAAS_SYNC
  description: vmaas-sync replica count
  value: '1'
# RESOURCES
- name: CPU_REQUEST_ADVISOR_LISTENER
  description: Requested CPU for pod
  value: 200m  # 500m prod
- name: CPU_LIMIT_ADVISOR_LISTENER
  description: Maximum CPU limit for pod
  value: 500m  # 1000m prod
- name: MEMORY_REQUEST_ADVISOR_LISTENER
  description: Requested memory for pod
  value: "512Mi"
- name: MEMORY_LIMIT_ADVISOR_LISTENER
  description: Maximum memory limit for pod
  value: "512Mi"
- name: CPU_REQUEST_EVALUATOR_RECALC
  description: Requested CPU for pod
  value: 200m  # 500m prod
- name: CPU_LIMIT_EVALUATOR_RECALC
  description: Maximum CPU limit for pod
  value: 500m  # 1000m prod
- name: MEMORY_REQUEST_EVALUATOR_RECALC
  description: Requested memory for pod
  value: "512Mi"
- name: MEMORY_LIMIT_EVALUATOR_RECALC
  description: Maximum memory limit for pod
  value: "1024Mi"
- name: CPU_REQUEST_EVALUATOR_UPLOAD
  description: Requested CPU for pod
  value: 200m  # 500m prod
- name: CPU_LIMIT_EVALUATOR_UPLOAD
  description: Maximum CPU limit for pod
  value: 500m  # 1000m prod
- name: MEMORY_REQUEST_EVALUATOR_UPLOAD
  description: Requested memory for pod
  value: "512Mi"
- name: MEMORY_LIMIT_EVALUATOR_UPLOAD
  description: Maximum memory limit for pod
  value: "1024Mi"
- name: CPU_REQUEST_LISTENER
  description: Requested CPU for pod
  value: 200m  # 500m prod
- name: CPU_LIMIT_LISTENER
  description: Maximum CPU limit for pod
  value: 500m  # 1000m prod
- name: MEMORY_REQUEST_LISTENER
  description: Requested memory for pod
  value: "512Mi"
- name: MEMORY_LIMIT_LISTENER
  description: Maximum memory limit for pod
  value: "512Mi"
- name: CPU_REQUEST_MANAGER
  description: Requested CPU for pod
  value: 200m  # 500m prod
- name: CPU_LIMIT_MANAGER
  description: Maximum CPU limit for pod
  value: 500m  # 1000m prod
- name: MEMORY_REQUEST_MANAGER
  description: Requested memory for pod
  value: "512Mi"
- name: MEMORY_LIMIT_MANAGER
  description: Maximum memory limit for pod
  value: "512Mi"
- name: CPU_REQUEST_MANAGER_ADMIN
  description: Requested CPU for pod
  value: 200m
- name: CPU_LIMIT_MANAGER_ADMIN
  description: Maximum CPU limit for pod
  value: 500m
- name: MEMORY_REQUEST_MANAGER_ADMIN
  description: Requested memory for pod
  value: "512Mi"
- name: MEMORY_LIMIT_MANAGER_ADMIN
  description: Maximum memory limit for pod
  value: "512Mi"
- name: CPU_REQUEST_TASKOMATIC
  description: Requested CPU for pod
  value: 200m
- name: CPU_LIMIT_TASKOMATIC
  description: Maximum CPU limit for pod
  value: 500m
- name: MEMORY_REQUEST_TASKOMATIC
  description: Requested memory for pod
  value: "512Mi"
- name: MEMORY_LIMIT_TASKOMATIC
  description: Maximum memory limit for pod
  value: "512Mi"
- name: CPU_REQUEST_VMAAS_SYNC
  description: Requested CPU for pod
  value: 200m
- name: CPU_LIMIT_VMAAS_SYNC
  description: Maximum CPU limit for pod
  value: 500m
- name: MEMORY_REQUEST_VMAAS_SYNC
  description: Requested memory for pod
  value: "512Mi"
- name: MEMORY_LIMIT_VMAAS_SYNC
  description: Maximum memory limit for pod
  value: "512Mi"
- name: LOGGING_LEVEL_APP
  description: Logging level in app code
  value: INFO
- name: LOGGING_LEVEL_LIBS
  description: Logging level in libs code
  value: WARNING
- name: READ_ONLY_MODE
  description: Enable or disable read-only mode
  value: "FALSE"
- name: MANIFEST_PUSH
  description: Push manifest to git
  vaule: 'FALSE'
- name: MANIFEST_BRANCH
  description: Git branch for manifests
  value: master
- name: PATCH_ADVISORIES_API
  description: Path to PATCH advisories endpoint.
  value: /api/patch/v1/advisories
- name: PATCH_VIEWS_ADVISORIES_API
  description: Path to PATCH views advisories endpoint.
  value: /api/patch/v1/views/systems/advisories
- name: PATCH_ID_QUERY_FILTER
  description: PATCH query filter by id parameter
  value: '?filter[id]'
- name: CYNDI_ENABLED
  description: Enable Cyndi integration
  value: "FALSE"  # Cyndi is not working correctly with Clowder and epehemeral env
- name: VULNERABILITY_ENV
  description: Environment Vulnerability is running in
  value: PROD
- name: SCHEDULE
  displayName: "CronJob schedule"
  description: "A string in cron syntax defining the desired schedule for the CronJob (defaults to once per day at 12:13 AM (13 0 * * *)"
  value: "13 1 * * *"
  required: true
  message: "... The CronJob schedule is: ${SCHEDULE} ..."
- name: JOBS
  description: Enabled jobs
  value: "stale_systems:5,delete_systems:30,rules_git_sync:240,db_metrics:15"
- name: CONTENT_GIT
  description: Location of insights-content(-vulnerability) repo
  value: https://github.com/RedHatInsights/insights-content-vulnerability.git
- name: BO_PROXY_HOST
  description: Host to accses backoffice proxy
  value: ""
- name: X_RH_INSIGHTS_ENV
  description: Environment for backoffice proxy
  value: prod
- name: X_RH_CLIENTID
  description: Client id for backoffice proxy
  value: vulnerability
- name: SCHEDULE
  displayName: "CronJob schedule"
  description: "A string in cron syntax defining the desired schedule for the CronJob (defaults to once per day at 12:13 AM (13 0 * * *)"
  value: "13 1 * * *"
  required: true
  message: "... The CronJob schedule is: ${SCHEDULE} ..."
- name: KAFKA_SSL_ENABLED
  description: Enable SSL in Kafka connection.
  value: "FALSE"
- name: KAFKA_CA_CERT
  description: Path to CA certificate.
  value: "/opt/certs/kafka-cacert"
- name: SYSTEM_DELETION_THRESHOLD
  description: Delete systems marked as deleted before N hours
  value: "1"
