import os
import json
import datetime
from kafka import KafkaConsumer, KafkaProducer

from common.logging import get_logger

BOOTSTRAP_SERVERS = os.getenv('MESSAGE_SERVICE', 've_kafka:9092')
GROUP_ID = os.getenv('MESSAGE_GROUP', 'vulnerability')
ENGINE_RESULTS_TOPIC = os.getenv('MESSAGE_TOPIC', 'vulnerability_results')

LOGGER = get_logger(__name__)


class QWriter(KafkaProducer):
    def __init__(self, topic=ENGINE_RESULTS_TOPIC, bootstrap_servers=BOOTSTRAP_SERVERS, **kwargs):
        super(QWriter, self).__init__(bootstrap_servers=bootstrap_servers, **kwargs)
        self.results_topic = topic
        LOGGER.info("Created message producer:")
        LOGGER.info("Using BOOTSTRAP_SERVERS: %s", bootstrap_servers)
        LOGGER.info("Using ENGINE_RESULTS_TOPIC: %s", self.results_topic)

    def send(self, msg):
        data = json.dumps(msg).encode("utf8")
        super(QWriter, self).send(self.results_topic, bytes(data))


class QReader(KafkaConsumer):
    def __init__(self, topic=ENGINE_RESULTS_TOPIC, group_id=GROUP_ID,
                 bootstrap_servers=BOOTSTRAP_SERVERS, **kwargs):
        super(QReader, self).__init__(topic,
                                      bootstrap_servers=bootstrap_servers,
                                      group_id=group_id,
                                      auto_offset_reset='latest',
                                      **kwargs,
                                      )
        LOGGER.info("Created message consumer:")
        LOGGER.info("Using BOOTSTRAP_SERVERS: %s", bootstrap_servers)
        LOGGER.info("Using GROUP_ID: %s", group_id)
        LOGGER.info("Using ENGINE_RESULTS_TOPIC: %s", topic)
