FROM registry.access.redhat.com/ubi8/ubi-minimal

RUN microdnf install python3 which java-openjdk-headless shadow-utils tar gzip file vim systemd libicu && microdnf clean all

ARG PG_REPO=https://download.postgresql.org/pub/repos/yum/12/redhat/rhel-8-x86_64/
ARG PG_RPM=postgresql12-12.2-2PGDG.rhel8.x86_64.rpm
ARG PG_LIBS_RPM=postgresql12-libs-12.2-2PGDG.rhel8.x86_64.rpm
ADD /manager/RPM-GPG-KEY-PGDG /etc/pki/rpm-gpg/

RUN curl -o /tmp/${PG_RPM} ${PG_REPO}${PG_RPM} && \
    curl -o /tmp/${PG_LIBS_RPM} ${PG_REPO}${PG_LIBS_RPM} && \
    rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-PGDG && \
    rpm -K /tmp/${PG_RPM} /tmp/${PG_LIBS_RPM} && \
    rpm -ivh /tmp/${PG_RPM} /tmp/${PG_LIBS_RPM} && \
    rm /tmp/${PG_RPM} /tmp/${PG_LIBS_RPM}

WORKDIR /platform_mock

ADD /platform_mock/Pipfile*        /platform_mock/

ENV LC_ALL=C.utf8
ENV LANG=C.utf8
ARG PIPENV_CHECK=1
ARG PIPENV_PYUP_API_KEY=""
RUN pip3 install --upgrade pipenv && \
    pipenv install --ignore-pipfile --deploy --system && ln -s /usr/bin/python3 /usr/bin/python && \
    if [ "${PIPENV_CHECK}" == 1 ] ; then pipenv check --system -i 39462 ; fi

RUN cd /platform_mock && \
    mkdir kafka && \
    curl -L https://downloads.apache.org/kafka/2.7.0/kafka_2.13-2.7.0.tgz \
    | tar -xz --strip-components=1 -C kafka/

RUN adduser --gid 0 -d /platform_mock --no-create-home insights && \
    chown -R insights /platform_mock

USER insights

EXPOSE 9092 8000

ADD /platform_mock/*.sh                  /platform_mock/
ADD /platform_mock/__init__.py           /platform_mock/platform_mock/
ADD /platform_mock/platform_mock.py      /platform_mock/platform_mock/
ADD /platform_mock/traffic_generator.py  /platform_mock/
ADD /platform_mock/data                  /platform_mock/data/
ADD /common/*.py                         /platform_mock/common/

CMD /platform_mock/entrypoint.sh
