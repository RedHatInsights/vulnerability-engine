#!/usr/bin/python3
import os
import time

import psycopg2

DB_NAME = os.getenv('POSTGRESQL_DATABASE', "vulnerability")
DB_USER = os.getenv('POSTGRESQL_USER', "ve_db_admin")
DB_PASS = os.getenv('POSTGRESQL_PASSWORD', "ve_db_admin_pwd")
DB_HOST = os.getenv('POSTGRESQL_HOST', "vulnerability-engine-database")
DB_PORT = int(os.getenv('POSTGRESQL_PORT', "5432"))


def main():
    conn = psycopg2.connect(dbname=DB_NAME, user=DB_USER, password=DB_PASS, host=DB_HOST, port=DB_PORT)
    cur = conn.cursor()
    cur.execute("SELECT COUNT(*) FROM system_platform")
    db_records_cnt, = cur.fetchone()
    cur.execute("SELECT COUNT(distinct rh_account_id) FROM system_platform")
    db_accounts_cnt, = cur.fetchone()
    print("Total %d systems in %d accounts in DB." % (db_records_cnt, db_accounts_cnt))
    db_accounts = {}
    cur.execute("SELECT id, name FROM rh_account ORDER BY name")
    for acc_id, acc_name in cur.fetchall():
        db_accounts[acc_id] = acc_name
    total_accounts = len(db_accounts)
    print("Total %s known accounts." % total_accounts)
    progress = 0
    for acc_id, acc_name in db_accounts.items():
        start_time = time.time()
        cur.execute("SELECT COUNT(*) FROM system_platform where rh_account_id = %s", (acc_id,))
        db_records_account_cnt, = cur.fetchone()
        cur.execute("SELECT refresh_account_cached_counts(%s)", (acc_name,))
        conn.commit()
        progress += 1
        print("Account '%s' (%s systems) refreshed in %.2f seconds. [%s/%s]" % (
            acc_name, db_records_account_cnt, time.time() - start_time, progress, total_accounts))
    conn.close()

if __name__ == "__main__":
    main()
