#!/bin/bash

USAGE="Usage:
$0 VMAAS_PATH [SETTINGS_YAML]

Required parameters:
  VMAAS_PATH - path to vmaas directory

Optional parameters:
  SETTINGS_YAML - path to directory with test settings (default: conf/settings.local.yaml)
"

[[ "$#" -gt 2 || -z $1 ]] && { echo "$USAGE" >&2; exit 1; }

wait_for_build() {
    count=60
    while [ "$count" -gt 0 ]; do
        docker-compose ps | grep "$1 " | grep Up
        [ "$?" -eq 0 ] && break
        echo "$1 is not Up, waiting 5s"
        ((count--))
        sleep 5
    done
    [ "$count" -gt 0 ] || exit 1
}

sync_vmaas() {
    count=5
    while [ "$count" -gt 0 ]; do
        curl -X PUT http://localhost:8081/api/v1/sync/cvemap -H "Authorization: token token"
        [ "$?" -eq 0 ] && break
        ((count--))
        sleep 5
    done
    [ "$count" -gt 0 ] || exit 1
}

cd $1
docker-compose up -d
wait_for_build "vmaas-webapp"
sync_vmaas
cd -

[ "$(docker-compose ps | wc -l)" -gt  2 ] && docker-compose down
cp conf/common.env conf/common.env.bak
sed -i 's|VMAAS_HOST=http://vmaas_webapp:8080|VMAAS_HOST=https://webapp-vmaas-stable.1b13.insights.openshiftapps.com|' conf/common.env
docker-compose up -d --build
wait_for_build "vulnerability-engine-manager"

docker pull quay.io/cloudservices/iqe-tests:latest

if [ -n "$2" ]; then
    settings="$2"
else
    settings="conf/settings.local.yaml"
fi

docker run -it --name iqe --rm --network host \
    -v $(readlink -f $settings):/iqe_settings/settings.local.yaml:z \
    -e IQE_TESTS_LOCAL_CONF_PATH=/iqe_settings \
    -e ENV_FOR_DYNACONF=dev \
    quay.io/cloudservices/iqe-tests:latest \
    iqe tests plugin vulnerability -k 'not basic_auth and not csaw' -m api -v --local

mv conf/common.env.bak conf/common.env
