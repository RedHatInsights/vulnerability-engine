#!/usr/bin/env bash

# Script to lock Pipfile dependencies in container and copy generated lock file back

workdir="/tmp/"
dockerfile="Dockerfile-pipenv"

cmd=$(command -v podman)
if [[ "$cmd" == "" ]]; then
    cmd=$(command -v docker)
fi

echo "Using: $cmd"

cat <<EOF > $workdir$dockerfile
FROM registry.access.redhat.com/ubi8/ubi-minimal
RUN microdnf install --setopt=install_weak_deps=0 --setopt=tsflags=nodocs \
        python38 python38-pip git && \
    microdnf clean all
RUN pip3 install --upgrade pip && pip3 install --upgrade pipenv
EOF

dirs="/ /tests /platform_mock"
current_dir=$(pwd)
cd $workdir
$cmd build -t pipenv-locker -f $dockerfile .
cd $current_dir
$cmd run --rm -d --name pipenv-locker-container pipenv-locker sleep infinity
for dir in $dirs; do
    $cmd exec pipenv-locker-container bash -c "mkdir -p /tmp$dir"
    $cmd cp ".$dir/Pipfile" pipenv-locker-container:"/tmp$dir/"
    $cmd exec pipenv-locker-container bash -c "cd /tmp$dir && pipenv lock"
    $cmd cp pipenv-locker-container:"/tmp${dir}/Pipfile.lock" ".$dir"
done
$cmd kill pipenv-locker-container
