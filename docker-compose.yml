version: '3'

services:
  ve_database:
    command:
      - "postgres"
      - "-c"
      - "log_timezone=UTC"
      - "-c"
      - "timezone=UTC"
    container_name: vulnerability-engine-database
    image: docker.io/library/postgres:15
    restart: unless-stopped
    env_file:
      - ./conf/common.env
      - ./conf/database.env
    ports:
      - 15432:5432
    volumes:
      - vulnerability-engine-db-data:/var/lib/postgresql/data

  ve_database_init:
    command: >
      bash -c "/engine/dbupgrade.sh && /engine/local_init_db.sh"
    container_name: vulnerability-engine-database-init
    image: vulnerability-engine-app:latest
    env_file:
      - ./conf/common.env
      - ./conf/database.env
    depends_on:
      - ve_database

  ve_manager:
    command: /engine/entrypoint.sh manager
    container_name: vulnerability-engine-manager
    build:
      context: ./
      dockerfile: ./Dockerfile
      args:
        PIPENV_CHECK: "${PIPENV_CHECK:-1}"
    image: vulnerability-engine-app:latest
    restart: unless-stopped
    env_file:
      - ./conf/common.env
      - ./conf/manager_base.env
      - ./conf/manager.env
    ports:
      - 8300:8000
    depends_on:
      - ve_database
      - platform_mock

  ve_manager_admin:
    command: /engine/entrypoint.sh manager-admin
    container_name: vulnerability-engine-manager-admin
    image: vulnerability-engine-app:latest
    restart: unless-stopped
    env_file:
      - ./conf/common.env
      - ./conf/manager_base.env
      - ./conf/database.env
    ports:
      - 8400:8000
    depends_on:
      - ve_database
      - platform_mock

  platform_mock:
    container_name: platform-mock
    build:
        context: ./
        dockerfile: ./platform_mock/Dockerfile
        args:
          PIPENV_CHECK: "${PIPENV_CHECK:-1}"

    image: vulnerability-engine-mock:latest
    restart: unless-stopped
    env_file:
      - ./conf/common.env
      - ./conf/platform_mock.env
    ports:
      - 9092:9092
      - 8100:8000
    tmpfs: /tmp

  ve_vmaas_sync:
    command: /engine/entrypoint.sh vmaas-sync
    container_name: vulnerability-engine-vmaas-sync
    image: vulnerability-engine-app:latest
    env_file:
      - ./conf/common.env
      - ./conf/vmaas-sync.env
    networks:
      - default
      - vmaas_default
    depends_on:
      - ve_database
      - platform_mock
    profiles:
      - vmsync

  ve_prometheus:
    container_name: vulnerability-engine-prometheus
    image: prom/prometheus:v2.21.0
    volumes:
      - ve-prometheus-data:/prometheus
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    security_opt:
      - label=disable
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9091:9090
    depends_on:
      - ve_evaluator_recalc
      - ve_evaluator_upload
      - ve_listener
      - ve_manager
    restart: unless-stopped
    profiles:
      - monitoring

  ve_grafana:
    container_name: vulnerability-engine-grafana
    build:
      context: ./
      dockerfile: ./monitoring/grafana/Dockerfile
    image: vulnerability-engine-grafana:latest
    depends_on:
      - ve_prometheus
    ports:
      - 3001:3000
    restart: unless-stopped
    profiles:
      - monitoring

  ve_taskomatic:
    command: /engine/entrypoint.sh taskomatic
    container_name: vulnerability-engine-taskomatic
    image: vulnerability-engine-app:latest
    restart: unless-stopped
    env_file:
      - ./conf/common.env
      - ./conf/taskomatic.env
      - ./conf/taskomatic_db_user.env
    depends_on:
      - ve_database

  ve_notificator:
    command: /engine/entrypoint.sh notificator
    container_name: vulnerability-engine-notificator
    image: vulnerability-engine-app:latest
    restart: unless-stopped
    env_file:
      - ./conf/common.env
      - ./conf/notificator.env
    depends_on:
      - ve_database
      - ve_evaluator_recalc
      - ve_evaluator_upload

  ve_exploit_sync:
    command: /engine/entrypoint.sh exploit-sync
    container_name: vulnerability-engine-exploit-sync
    image: vulnerability-engine-app:latest
    env_file:
      - ./conf/common.env
      - ./conf/exploit-sync.env
      - ./conf/taskomatic_db_user.env
    depends_on:
      - ve_database
      - platform_mock
    profiles:
      - exploit-sync

  ve_grouper:
    command: /engine/entrypoint.sh grouper
    container_name: vulnerability-engine-grouper
    image: vulnerability-engine-app:latest
    restart: unless-stopped
    env_file:
      - ./conf/common.env
      - ./conf/listener.env
      - ./conf/grouper.env
    depends_on:
      - platform_mock

  ve_listener:
    command: /engine/entrypoint.sh listener
    container_name: vulnerability-engine-listener
    image: vulnerability-engine-app:latest
    restart: unless-stopped
    env_file:
      - ./conf/common.env
      - ./conf/listener.env
    ports:
      - "8087:8087"
    depends_on:
      - ve_database
      - ve_grouper
      - platform_mock

  ve_evaluator_recalc:
    command: /engine/entrypoint.sh evaluator
    container_name: vulnerability-engine-evaluator-recalc
    image: vulnerability-engine-app:latest
    restart: unless-stopped
    env_file:
      - ./conf/common.env
      - ./conf/evaluator.env
      - ./conf/evaluator_recalc.env
    ports:
      - 8088:8088
    networks:
      - default
      - vmaas_default
    depends_on:
      - ve_database
      - platform_mock

  ve_evaluator_upload:
    command: /engine/entrypoint.sh evaluator
    container_name: vulnerability-engine-evaluator-upload
    image: vulnerability-engine-app:latest
    restart: unless-stopped
    env_file:
      - ./conf/common.env
      - ./conf/evaluator.env
      - ./conf/evaluator_upload.env
    ports:
      - 8089:8089
    networks:
      - default
      - vmaas_default
    depends_on:
      - ve_database
      - ve_listener
      - platform_mock

  ve_cluster:
    command: /engine/entrypoint.sh cluster
    container_name: vulnerability-engine-cluster
    image: vulnerability-engine-app:latest
    env_file:
      - ./conf/common.env
      - ./conf/cluster.env
      - ./conf/database.env
    depends_on:
      - ve_database
    profiles:
      - cluster
networks:
  default:
  vmaas_default:
    external: true
volumes:
  vulnerability-engine-db-data:
  ve-prometheus-data:
