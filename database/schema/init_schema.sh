#!/usr/bin/bash

if $PG_INITIALIZED ; then
    # Need to make sure admin role has createrole attribute
    psql -c "ALTER USER ${POSTGRESQL_USER} WITH CREATEROLE" -d ${POSTGRESQL_DATABASE}

    psql -U ${POSTGRESQL_USER} -d ${POSTGRESQL_DATABASE} -f ${CONTAINER_SCRIPTS_PATH}/start/ve_db_user_create_postgresql.sql
    psql -U ${POSTGRESQL_USER} -d ${POSTGRESQL_DATABASE} -f ${CONTAINER_SCRIPTS_PATH}/start/ve_db_postgresql.sql

    if [[ "${CYNDI_MOCK:-}" == "TRUE" ]]; then
        psql -U ${POSTGRESQL_USER} -d ${POSTGRESQL_DATABASE} -f ${CONTAINER_SCRIPTS_PATH}/start/ve_db_dev_cyndi.sql
    fi

    psql -c "ALTER USER ve_db_user_manager WITH PASSWORD '${VE_DB_USER_MANAGER_PASSWORD}'" -d ${POSTGRESQL_DATABASE}
    psql -c "ALTER USER ve_db_user_evaluator WITH PASSWORD '${VE_DB_USER_EVALUATOR_PASSWORD}'" -d ${POSTGRESQL_DATABASE}
    psql -c "ALTER USER ve_db_user_listener WITH PASSWORD '${VE_DB_USER_LISTENER_PASSWORD}'" -d ${POSTGRESQL_DATABASE}
    psql -c "ALTER USER ve_db_user_vmaas_sync WITH PASSWORD '${VE_DB_USER_VMAAS_SYNC_PASSWORD}'" -d ${POSTGRESQL_DATABASE}
    psql -c "ALTER USER ve_db_user_metrics WITH PASSWORD '${VE_DB_USER_METRICS_PASSWORD}'" -d ${POSTGRESQL_DATABASE}
    psql -c "ALTER USER ve_db_user_taskomatic WITH PASSWORD '${VE_DB_USER_TASKOMATIC_PASSWORD}'" -d ${POSTGRESQL_DATABASE}
    psql -c "ALTER USER ve_db_user_advisor_listener WITH PASSWORD '${VE_DB_USER_ADVISOR_LISTENER_PASSWORD}'" -d ${POSTGRESQL_DATABASE}
    psql -c "ALTER USER cyndi WITH PASSWORD '${CYNDI_DB_ADMIN_PASSWORD}'" -d ${POSTGRESQL_DATABASE}
else
    echo "Schema initialization skipped."
fi

