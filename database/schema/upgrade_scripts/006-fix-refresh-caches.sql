CREATE OR REPLACE FUNCTION refresh_account_cached_counts(rh_account_in varchar)
  RETURNS void AS
$refresh_account_cached_counts$
  BEGIN
    UPDATE system_platform sp SET cve_count_cache = (
      SELECT COUNT(cve) FROM system_vulnerabilities sv
      WHERE sp.rh_account = rh_account_in AND sv.inventory_id = sp.inventory_id AND sv.when_mitigated IS NULL
    ) WHERE sp.rh_account = rh_account_in;
    DELETE FROM cve_affected_systems_cache where rh_account = rh_account_in;
    INSERT INTO cve_affected_systems_cache (cve, rh_account, systems_affected, direct_systems_affected)
      SELECT sv.cve, sp.rh_account, count(sv.inventory_id), count(CASE WHEN sp.satellite_managed THEN NULL ELSE 1 END)
      FROM system_vulnerabilities sv INNER JOIN
           system_platform sp USING (inventory_id)
      WHERE sp.rh_account = rh_account_in AND
            sp.last_evaluation IS NOT NULL AND
            sp.opt_out = FALSE AND
            sv.when_mitigated IS NULL
      GROUP BY sv.cve, sp.rh_account;
  END;
$refresh_account_cached_counts$
  LANGUAGE 'plpgsql';

CREATE OR REPLACE FUNCTION refresh_system_cached_counts(inventory_id_in varchar)
  RETURNS void AS
$refresh_system_cached_counts$
  BEGIN
    UPDATE system_platform sp SET cve_count_cache = (
      SELECT COUNT(cve) FROM system_vulnerabilities sv
      WHERE sp.inventory_id = inventory_id_in AND sv.inventory_id = sp.inventory_id AND sv.when_mitigated IS NULL
    ) WHERE sp.inventory_id = inventory_id_in;
  END;
$refresh_system_cached_counts$
  LANGUAGE 'plpgsql';