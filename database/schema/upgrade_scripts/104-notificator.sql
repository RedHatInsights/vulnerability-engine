-- Notifications integration with vulnerability
CREATE USER ve_db_user_notificator;
ALTER USER ve_db_user_notificator WITH PASSWORD 've_db_user_notificator_pwd';

CREATE TYPE notification AS enum('new-cve-cvss', 'new-cve-severity', 'new-cve-security-rule', 'any-cve-known-exploit');

CREATE TABLE IF NOT EXISTS notified_accounts (
  rh_account_id INT NOT NULL,
  cve_id INT NOT NULL,
  notif_type notification NOT NULL,
  UNIQUE (rh_account_id, cve_id, notif_type),
  CONSTRAINT rh_account_id
    FOREIGN KEY (rh_account_id)
    REFERENCES rh_account (id),
  CONSTRAINT cve_id
    FOREIGN KEY (cve_id)
    REFERENCES cve_metadata (id)
) TABLESPACE pg_default;

GRANT SELECT, INSERT, UPDATE, DELETE ON notified_accounts TO ve_db_user_notificator;

GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_evaluator;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_evaluator;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_listener;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_listener;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_manager;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_manager;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_vmaas_sync;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_vmaas_sync;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_taskomatic;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_taskomatic;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_advisor_listener;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_advisor_listener;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_notificator;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_notificator;
