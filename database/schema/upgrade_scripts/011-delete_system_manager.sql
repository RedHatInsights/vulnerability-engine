-- manager needs to be able to update things like 'status' on a sysid/cve combination, also needs to delete
GRANT UPDATE, DELETE ON system_vulnerabilities TO ve_db_user_manager;

-- manager needs to update cache and delete systems
GRANT UPDATE (cve_count_cache), DELETE ON system_platform TO ve_db_user_manager;

GRANT SELECT, INSERT, UPDATE, DELETE ON deleted_systems TO ve_db_user_manager;

GRANT DELETE ON system_repo TO ve_db_user_manager;

CREATE OR REPLACE FUNCTION delete_system(inventory_id_in varchar)
  RETURNS TABLE (deleted_inventory_id TEXT) AS
$delete_system$
  BEGIN
    -- register deleted system
    INSERT INTO deleted_systems (inventory_id, when_deleted)
    VALUES (inventory_id_in, CURRENT_TIMESTAMP)
    ON CONFLICT (inventory_id) DO UPDATE SET
    when_deleted = EXCLUDED.when_deleted;

    -- opt out to refresh cache and then delete
    WITH locked_row AS (
      SELECT inventory_id
      FROM system_platform
      WHERE inventory_id = inventory_id_in
      FOR UPDATE
    )
    UPDATE system_platform SET opt_out = true
    WHERE inventory_id = inventory_id_in;
    DELETE FROM system_vulnerabilities
    WHERE inventory_id = inventory_id_in;
    DELETE FROM system_repo
    WHERE inventory_id = inventory_id_in;
    RETURN QUERY DELETE FROM system_platform
    WHERE inventory_id = inventory_id_in
    RETURNING inventory_id;
  END;
$delete_system$
  LANGUAGE 'plpgsql';
