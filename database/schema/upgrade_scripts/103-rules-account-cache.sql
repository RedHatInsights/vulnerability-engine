CREATE TABLE IF NOT EXISTS rule_account_cache (
    rh_account_id INT NOT NULL,
    rule_id INT NOT NULL,
    systems_affected INT NOT NULL,
    CONSTRAINT rh_account_id
      FOREIGN KEY (rh_account_id)
      REFERENCES rh_account (id),
    CONSTRAINT rule_id
      FOREIGN KEY (rule_id)
      REFERENCES insights_rule (id),
    UNIQUE (rh_account_id, rule_id)
) TABLESPACE pg_default;

GRANT SELECT, INSERT, UPDATE, DELETE ON rule_account_cache TO ve_db_user_taskomatic;

GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_evaluator;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_evaluator;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_listener;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_listener;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_manager;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_manager;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_vmaas_sync;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_vmaas_sync;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_taskomatic;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_taskomatic;
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_advisor_listener;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_advisor_listener;
