-- module table
CREATE TABLE IF NOT EXISTS module (
  id BIGSERIAL,
  name TEXT NOT NULL, CHECK (NOT empty(name)),
  stream TEXT NOT NULL, CHECK (NOT empty(stream)),
  UNIQUE (name, stream),
  PRIMARY KEY (id)
) TABLESPACE pg_default;

GRANT SELECT, INSERT, UPDATE, DELETE ON module TO ve_db_user_evaluator;

-- user for evaluator component
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_evaluator;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_evaluator;

-- user for listener component
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_listener;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_listener;

-- user for UI manager component
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_manager;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_manager;
GRANT INSERT, DELETE ON announcement TO ve_db_user_manager;

-- user for VMaaS sync component
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_vmaas_sync;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_vmaas_sync;

-- user for taskomatic service
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_taskomatic;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_taskomatic;

-- user for advisor listener
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_advisor_listener;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_advisor_listener;

-- user for notificator
GRANT SELECT ON ALL TABLES IN SCHEMA public TO ve_db_user_notificator;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO ve_db_user_notificator;

ALTER TABLE vulnerable_package ADD COLUMN module_id BIGINT;
ALTER TABLE vulnerable_package DROP CONSTRAINT vulnerable_package_package_name_id_cpe_id_key;
ALTER TABLE vulnerable_package ADD CONSTRAINT module_id FOREIGN KEY (module_id) REFERENCES module (id);

CREATE UNIQUE INDEX ON vulnerable_package(package_name_id, cpe_id) WHERE module_id IS NULL;
CREATE UNIQUE INDEX ON vulnerable_package(package_name_id, cpe_id, module_id) WHERE module_id IS NOT NULL;
