#!/bin/sh

function psql_exec {
    PGPASSWORD="${POSTGRES_PASSWORD}" psql --no-password -h "${POSTGRES_HOST}" -p "${POSTGRES_PORT}" -U "${POSTGRES_USER}" -d "${POSTGRES_DB}" -t -f "$1"
}

cd $(dirname $0)

# Try to initialize schema if there are no tables (typically first run in deployments without database container - RDS)
EXISTING_TABLES=$(echo "select count(*) from pg_stat_user_tables where schemaname = 'public'" | psql_exec - | sed 's/[[:space:]]//g')
RETVAL=$?
if [[ "$RETVAL" == "0" && "$EXISTING_TABLES" == "0" ]]; then
    echo "Empty database, initializing..."
    psql_exec ./database/schema/ve_db_user_create_postgresql.sql
    psql_exec ./database/schema/ve_db_postgresql.sql
    echo "ALTER USER ve_db_user_manager WITH PASSWORD '${VE_DB_USER_MANAGER_PASSWORD:-ve_db_user_manager_pwd}'" | psql_exec -
    echo "ALTER USER ve_db_user_evaluator WITH PASSWORD '${VE_DB_USER_EVALUATOR_PASSWORD:-ve_db_user_evaluator_pwd}'" | psql_exec -
    echo "ALTER USER ve_db_user_listener WITH PASSWORD '${VE_DB_USER_LISTENER_PASSWORD:-ve_db_user_listener_pwd}'" | psql_exec -
    echo "ALTER USER ve_db_user_vmaas_sync WITH PASSWORD '${VE_DB_USER_VMAAS_SYNC_PASSWORD:-ve_db_user_vmaas_sync_pwd}'" | psql_exec -
    echo "ALTER USER ve_db_user_taskomatic WITH PASSWORD '${VE_DB_USER_TASKOMATIC_PASSWORD:-ve_db_user_taskomatic_pwd}'" | psql_exec -
    echo "ALTER USER ve_db_user_advisor_listener WITH PASSWORD '${VE_DB_USER_ADVISOR_LISTENER_PASSWORD:-ve_db_user_advisor_listener_pwd}'" | psql_exec -
    echo "ALTER USER ve_db_user_notificator WITH PASSWORD '${VE_DB_USER_NOTIFICATOR_PASSWORD:-ve_db_user_notificator_pwd}'" | psql_exec -
    echo "ALTER USER cyndi WITH PASSWORD '${CYNDI_DB_ADMIN_PASSWORD:-cyndi_db_admin_pwd}'" | psql_exec -
else
    python3 -m database.upgrade.upgrade
fi
