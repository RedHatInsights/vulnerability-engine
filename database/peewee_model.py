from peewee import Model, TextField, DateTimeField, IntegerField, DecimalField, ForeignKeyField
from database.peewee_handler import PeeweeHandler


class UnknownField(object):
    def __init__(self, *_, **__): pass


class BaseModel(Model):
    class Meta:
        database = PeeweeHandler.get_db()


class SystemPlatform(BaseModel):
    platform_id = TextField(null=False, unique=True)
    rh_account = TextField(null=False)
    display_name = TextField(null=False)
    first_reported = DateTimeField(null=False)
    s3_url = TextField(null=True)
    vmaas_json = TextField(null=True)
    json_checksum = TextField(null=True)
    last_updated = DateTimeField(null=False)
    unchanged_since = DateTimeField(null=False)

    class Meta:
        db_table = "system_platform"
        primary_key = False


class VulnerabilitySource(BaseModel):
    name = TextField(null=False, unique=True)

    class Meta:
        db_table = "vulnerability_source"


class CveMetadata(BaseModel):
    cve = TextField(primary_key=True)
    cvss3_score = DecimalField(index=True, null=True)
    cvss3_metrics = TextField(null=True)
    description = TextField(null=False)
    impact = TextField(null=False)
    public_date = DateTimeField(null=False)
    modified_date = DateTimeField(null=False)

    class Meta:
        db_table = 'cve_metadata'


class SystemVulnerabilities(BaseModel):
    platform_id = ForeignKeyField(db_column="platform_id", rel_model=SystemPlatform, to_field="platform_id")
    cve = ForeignKeyField(db_column="cve", rel_model=CveMetadata, to_field="cve")
    vulnerability_source = ForeignKeyField(db_column="vulnerability_source", rel_model=VulnerabilitySource, to_field="id")
    first_reported = DateTimeField(null=False)
    when_mitigated = DateTimeField(null=True)

    class Meta:
        db_table = "system_vulnerabilities"
        primary_key = False


class ProdsecErrorKey(BaseModel):
    name = TextField(null=False, unique=True)

    class Meta:
        db_table = 'prodsec_error_key'


class SystemProdsecErrorKey(BaseModel):
    platform_id = ForeignKeyField(db_column="platform_id", rel_model=SystemPlatform, to_field="platform_id")
    error_key_id = ForeignKeyField(db_column="error_key_id", rel_model=ProdsecErrorKey, to_field="id")
    first_reported = DateTimeField(null=False)
    when_mitigated = DateTimeField(null=True)

    class Meta:
        db_table = 'system_prodsec_error_key'
        primary_key = False
