-- Functions -------------------------------------------------------------------------------------
create or replace FUNCTION empty(t TEXT)
RETURNS BOOLEAN as $$
BEGIN
    return t ~ '^[[:space:]]*$';
END;
$$ language 'plpgsql';

-- Tables ----------------------------------------------------------------------------------------

-- evr
CREATE TABLE IF NOT EXISTS evr (
  id SERIAL,
  epoch TEXT NOT NULL, CHECK (NOT empty(epoch)),
  version TEXT NOT NULL, CHECK (NOT empty(version)),
  release TEXT NOT NULL, CHECK (NOT empty(release)),
  UNIQUE (epoch, version, release),
  PRIMARY KEY (id)
) TABLESPACE pg_default;


-- arch
CREATE TABLE IF NOT EXISTS arch (
  id SERIAL,
  name TEXT NOT NULL UNIQUE, CHECK (NOT empty(name)),
  PRIMARY KEY (id)
) TABLESPACE pg_default;

INSERT INTO arch (name) VALUES
  ('noarch'), ('i386'), ('i486'), ('i586'), ('i686'), ('alpha'), ('alphaev6'), ('ia64'), ('sparc'),
  ('sparcv9'), ('sparc64'), ('s390'), ('athlon'), ('s390x'), ('ppc'), ('ppc64'), ('ppc64le'),
  ('pSeries'), ('iSeries'), ('x86_64'), ('ppc64iseries'), ('ppc64pseries'), ('ia32e'), ('amd64'), ('aarch64'),
  ('armv7hnl'), ('armv7hl'), ('armv7l'), ('armv6hl'), ('armv6l'), ('armv5tel');


-- package_name
CREATE TABLE IF NOT EXISTS package_name (
  id SERIAL,
  name TEXT NOT NULL UNIQUE, CHECK (NOT empty(name)),
  PRIMARY KEY (id)
) TABLESPACE pg_default;


-- package
CREATE TABLE IF NOT EXISTS package (
  id SERIAL,
  name_id INT NOT NULL,
  evr_id INT NOT NULL,
  arch_id INT NOT NULL,
  summary TEXT NULL, CHECK (NOT empty(summary)),
  description TEXT NULL, CHECK (NOT empty(description)),
  PRIMARY KEY (id),
  CONSTRAINT name_id
    FOREIGN KEY (name_id)
    REFERENCES package_name (id),
  CONSTRAINT evr_id
    FOREIGN KEY (evr_id)
    REFERENCES evr (id),
  CONSTRAINT arch_id
    FOREIGN KEY (arch_id)
    REFERENCES arch (id)
) TABLESPACE pg_default;


-- server
CREATE TABLE IF NOT EXISTS server (
  id SERIAL,
  uuid text NOT NULL,
  PRIMARY KEY (id),
  UNIQUE (uuid)
) TABLESPACE pg_default;


-- snapshot
CREATE TABLE IF NOT EXISTS snapshot (
  id SERIAL,
  hash text NOT NULL,
  PRIMARY KEY (id),
  UNIQUE (hash)
) TABLESPACE pg_default;


-- server_snapshot
CREATE TABLE IF NOT EXISTS server_snapshot (
  server_id INT NOT NULL,
  snapshot_id INT NOT NULL,
  time TIMESTAMP WITH TIME ZONE NOT NULL,
  CONSTRAINT server_id
    FOREIGN KEY (server_id)
    REFERENCES server (id),
  CONSTRAINT snapshot_id
    FOREIGN KEY (snapshot_id)
    REFERENCES snapshot (id),
  UNIQUE (server_id, snapshot_id, time)
) TABLESPACE pg_default;

-- snapshot_package
CREATE TABLE IF NOT EXISTS snapshot_package (
  snapshot_id INT NOT NULL,
  package_id INT NOT NULL,
  CONSTRAINT snapshot_id
    FOREIGN KEY (snapshot_id)
    REFERENCES snapshot (id),
  CONSTRAINT package_id
    FOREIGN KEY (package_id)
    REFERENCES package (id),
  UNIQUE (snapshot_id, package_id)
) TABLESPACE pg_default;
