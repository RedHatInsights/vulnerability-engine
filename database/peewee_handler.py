"""
Module containing peewee database handler class.
"""
import os
from peewee import PostgresqlDatabase


class PeeweeHandler:
    """Static class maintaining single PostgreSQL connection."""
    db_name = os.getenv('POSTGRESQL_DATABASE', "vulnerability")
    db_user = os.getenv('POSTGRESQL_USER', "ve_db_user_unknown")
    db_pass = os.getenv('POSTGRESQL_PASSWORD', "ve_db_user_unknown_pwd")
    db_host = os.getenv('POSTGRESQL_HOST', "ve_database")
    db_port = int(os.getenv('POSTGRESQL_PORT', "5432"))
    db = None

    @classmethod
    def get_db(cls):
        """Get database object. Create new connection if doesn't exist."""
        if cls.db is None:
            cls.db = PostgresqlDatabase(
                database=cls.db_name, user=cls.db_user, password=cls.db_pass, host=cls.db_host, port=cls.db_port)
            cls.db.connect()
        return cls.db

    @classmethod
    def close_db(cls):
        """Close database connection."""
        if cls.db is not None:
            cls.db.close()
            cls.db = None

    @classmethod
    def rollback(cls):
        """Rollback any pending transaction."""
        if cls.db is not None:
            cls.db.rollback()

