"""
Module defines common conditions for queries in manager or other parts.
"""
# pylint: disable=singleton-comparison,superfluous-parens
from peewee import fn

from .constants import HostType
from .peewee_model import SystemPlatform, SystemVulnerabilities, InsightsRule


def system_is_active(rh_account_id=None):
    """
    Filter out invalid systems from system_platform table.
    Filter by rh_account_id if present.
    Expects table: system_platform
    """
    cond = (SystemPlatform.opt_out == False) & \
           (SystemPlatform.stale == False) & \
           (SystemPlatform.when_deleted.is_null(True)) & \
           (fn.COALESCE(SystemPlatform.host_type, 'null') != HostType.EDGE)
    if rh_account_id is not None:
        cond = cond & (SystemPlatform.rh_account_id == rh_account_id)
    return cond


def system_has_vmaas_hit():
    """
    Filter system-cve hit only by vmaas evaluation
    Expects table: system_vulnerabilities
    """
    return (SystemVulnerabilities.when_mitigated.is_null(True))


def system_has_rule_hit():
    """
    Filter system-cve hit only by insights rule evaluation
    Expects table: system_vulnerabilities
    Uses table: insights_rule
    """
    return (SystemVulnerabilities.mitigation_reason.is_null(True)) & \
           (SystemVulnerabilities.rule_id << InsightsRule.select(InsightsRule.id)
                                                         .where(InsightsRule.active == True &
                                                                InsightsRule.rule_only == False))


def system_is_vulnerable():
    """
    Filter system-cve hit by both vmaas and insights rule
    Expects table: system_vulnerabilities
    Uses table: insights_rule
    """
    return system_has_vmaas_hit() | (system_has_rule_hit())
