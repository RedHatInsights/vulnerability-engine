"""
Async VMaaS API client
"""
import asyncio
import aiohttp

from common.logging import get_logger
from common.utils import REQUEST_RETRIES, VMAAS_RETURN_ERR, VMAAS_CNX_ERR

LOGGER = get_logger(__name__)


async def vmaas_post_request(endpoint, data_json):
    """Sends request to VMAAS"""
    headers = {'Content-type': 'application/json',
               'Accept': 'application/json'}
    tries = 0
    while True:
        if tries >= REQUEST_RETRIES:
            break
        try:
            async with aiohttp.request('POST', endpoint, json=data_json, headers=headers) as response:
                if response.status == 200:
                    return await response.json()
                if response.status == 503:
                    LOGGER.info("VMAAS temporarily unavailable, retrying...")
                    await asyncio.sleep(1)
                else:
                    tries += 1
                    VMAAS_RETURN_ERR.inc()
                    LOGGER.error("Error during request to VMaaS endpoint %s: HTTP %s, %s",
                                 endpoint, response.status, await response.text())
                    LOGGER.debug("JSON: %s", str(data_json))
                    # Do not retry for 4xx HTTP codes
                    if 400 <= response.status < 500:
                        break
        except aiohttp.ClientError:
            tries += 1
            VMAAS_CNX_ERR.inc()
            LOGGER.exception("Error calling VMAAS: ")
    return None
