"""
Module represents health endpoint + prometheus metrics as one async server
called status.
"""
from prometheus_client import generate_latest
from aiohttp import web


async def healthz(_):
    """Health handler"""
    return web.Response()


async def metrics(_):
    """Metrics handler"""
    return web.Response(body=generate_latest())


def create_status_app(logger):
    """Create instance of status applications"""
    app = web.Application(logger=logger)
    app.router.add_get("/healthz", healthz)
    app.router.add_get("/metrics", metrics)
    return app


def create_status_runner(app, port, logger, loop):
    """Create AIOHTTP runner to run server async"""
    runner = web.AppRunner(app, logger=logger)
    loop.run_until_complete(runner.setup())
    site = web.TCPSite(runner, '0.0.0.0', port)
    return runner, site
