#!/usr/bin/python3
"""
vulnerability-manager - backend for UI
"""

from apispec import APISpec
from tornado import gen, httpserver, ioloop, web
from common import DEFAULT_ROUTE, BaseHandler, NotFoundHandler
from cve_handler import CVEHandler
from error_key_handler import ErrorKeyHandler
from system_handler import SystemHandler
from vulnerabilities_handler import VulnerabilitiesHandler

SPEC = APISpec(
    title='Vulnerability Engine Manager',
    version='latest',
    plugins=(
        'apispec.ext.tornado',
    ),
    basePath="/",
)


class ApiSpecHandler(BaseHandler):
    """Handler class providing API specification."""

    @gen.coroutine
    def get(self):  # pylint: disable=arguments-differ
        """Get API specification.
           ---
           description: Get API specification
           responses:
             200:
               description: OpenAPI/Swagger 2.0 specification JSON returned
        """
        result = SPEC.to_dict()
        self.write(result)
        yield self.flush()


def setup_apispec(handlers):
    """Setup definitions and handlers for apispec."""
    for handler in handlers:
        SPEC.add_path(urlspec=handler)


class ServerApplication(web.Application):
    """Main application class"""
    def __init__(self):
        handlers = [
            (DEFAULT_ROUTE + r"/apispec/?", ApiSpecHandler),
            (DEFAULT_ROUTE + r"/cves/CVE-[^/]*/?[^/]*/?$", CVEHandler),
            (DEFAULT_ROUTE + r"/errorkeys/[^/]*/[^/]*/?$", ErrorKeyHandler),
            (DEFAULT_ROUTE + r"/systems/PLAT-.+/.+", SystemHandler),
            (DEFAULT_ROUTE + r"/vulnerabilities/.*", VulnerabilitiesHandler)
        ]
        web.Application.__init__(self, handlers, autoreload=False, debug=False,
                                 serve_traceback=False, default_handler_class=NotFoundHandler)

        setup_apispec(handlers)


def main():
    """Sets up and run whole application"""
    app = ServerApplication()
    http_server = httpserver.HTTPServer(app)
    http_server.listen(8443)
    ioloop.IOLoop.instance().start()


if __name__ == '__main__':
    main()
