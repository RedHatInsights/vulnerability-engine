"""
Filter functions modifying queries should go here
"""
import operator

from peewee import fn

from common.peewee_model import CveAccountData, CveMetadata
from .base import parse_int_list


OPS = {
    'eq': operator.eq,
    'ne': operator.ne,
    'gt': operator.gt,
    'lt': operator.lt,
    'ge': operator.ge,
    'le': operator.le,
}


def _filter_cve_by_cvss(query, args):
    for key in args:
        operation = key.lower()
        if operation in OPS:
            query = query.where(OPS[operation](fn.COALESCE(CveMetadata.cvss3_score, CveMetadata.cvss2_score), args[key]))
    return query


def _filter_cve_by_public_date(query, args):
    for key in args:
        operation = key.lower()
        if operation in OPS:
            query = query.where(OPS[operation](CveMetadata.public_date, args[key]))
    return query


def _filter_cve_by_business_risk(query, value):
    return query.where(fn.COALESCE(CveAccountData.business_risk_id, 0) << parse_int_list(value))


def _filter_cve_by_impact(query, value):
    return query.where(CveMetadata.impact_id << parse_int_list(value))


def _filter_cve_by_status(query, value):
    return query.where(fn.COALESCE(CveAccountData.status_id, 0) << parse_int_list(value))


VULN_CVES = {
    'business_risk': _filter_cve_by_business_risk,
    'cvss': _filter_cve_by_cvss,
    'impact': _filter_cve_by_impact,
    'public_date': _filter_cve_by_public_date,
    'status': _filter_cve_by_status,
}


def walk_filters(query, params, filters):
    """Walk filter structure and applies filtering"""
    for key in params:
        if key in filters:
            if isinstance(filters[key], dict):
                query = walk_filters(query, params[key], filters[key])
            elif callable(filters[key]):
                query = filters[key](query, params[key])
    return query
