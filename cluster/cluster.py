"""
Cluster job
"""

from psycopg2 import connect, sql

from common.config import Config
from common.logging import get_logger, init_logging

CFG = Config()

LOGGER = get_logger(__name__)


def get_conn():
    """Returns DB connection"""
    return connect(
        dbname=CFG.db_name,
        user=CFG.db_user,
        password=CFG.db_pass,
        host=CFG.db_host,
        port=CFG.db_port,
        sslmode=CFG.db_ssl_mode,
        sslrootcert=CFG.db_ssl_root_cert_path,
    )


def cluster() -> None:
    """Cluster `system_platform` and all `system_vulnerabilities_active_*` tables"""
    LOGGER.info("Starting cluster job")

    conn = get_conn()
    cur = conn.cursor()

    LOGGER.info("Clustering system_platform table")
    cur.execute("""CLUSTER system_platform USING system_platform_rh_account_id_idx""")

    if CFG.cluster_system_vulnerabilities:
        cur.execute(
            """
            SELECT tablename, indexname
            FROM   pg_indexes
            WHERE  tablename    LIKE 'system_vulnerabilities_active_%'
                   AND indexdef LIKE '%(rh_account_id, cve_id)%'
            """
        )

        table_index_tuples = list(cur.fetchall())

        for (table, index) in table_index_tuples:
            LOGGER.info("Clustering %s table", table)
            query = sql.SQL("CLUSTER {} USING {}").format(
                sql.Identifier(table),
                sql.Identifier(index),
            )
            cur.execute(query)

    conn.commit()
    cur.close()
    conn.close()
    LOGGER.info("Finished cluster job")


if __name__ == "__main__":
    init_logging()
    cluster()
