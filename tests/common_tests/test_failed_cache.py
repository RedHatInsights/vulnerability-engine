# pylint: disable=no-self-use
"""
Tests for failed cache.
"""

import concurrent
import asyncio

from common.failed_cache import FailedCache


class TestFailedCache:
    """Test suite"""

    @staticmethod
    def _failed_func_mock(msg):
        assert msg == "failed1"

    def test_clear_cache(self):
        """Test cache clearing"""
        FailedCache.upload_cache.append("failed1")
        FailedCache.upload_cache.append("failed2")

        assert "failed1" in FailedCache.upload_cache
        assert "failed2" in FailedCache.upload_cache

        FailedCache.clear_cache(FailedCache.upload_cache)
        assert FailedCache.upload_cache == []

    def test_cache_processing(self):
        """Test cache processing"""
        with concurrent.futures.ThreadPoolExecutor(1) as executor:
            loop = asyncio.get_event_loop()
            FailedCache.upload_cache.append("failed1")

            FailedCache.process_failed_cache(FailedCache.upload_cache, executor, TestFailedCache._failed_func_mock, loop)
