# -*- coding: utf-8 -*-
# pylint: disable=no-self-use
"""
Test logging.
"""
import os
import logging
from common.logging import setup_cw_logging


class TestLogging:
    """TestLogging"""

    def test_cw_disabled(self, caplog):
        """tests disabled cloudwatch logging"""
        with caplog.at_level(logging.INFO):
            logger = logging.getLogger("test_cw")
            setup_cw_logging(logger)
        assert caplog.records[0].msg == "CloudWatch logging disabled"
        caplog.clear()

    def test_no_cw(self, caplog):
        """test_no_cw"""
        os.environ["CW_ENABLED"] = "TRUE"
        with caplog.at_level(logging.INFO):
            logger = logging.getLogger("test_cw")
            setup_cw_logging(logger)
        assert caplog.records[0].msg == "CloudWatch logging disabled due to missing access key"
        caplog.clear()
        del os.environ["CW_ENABLED"]

    def test_cw_err(self, caplog):
        """test_cw_err"""
        os.environ["CW_ENABLED"] = "TRUE"
        os.environ["CW_AWS_ACCESS_KEY_ID"] = "cw-aws-access-key-id"
        os.environ["CW_AWS_SECRET_ACCESS_KEY"] = "cw-aws-secret-access-key"
        with caplog.at_level(logging.INFO):
            logger = logging.getLogger("test_cw")
            setup_cw_logging(logger)
        assert caplog.records[0].msg.startswith("Unable to enable CloudWatch logging:")
        caplog.clear()
        del os.environ["CW_ENABLED"]
        del os.environ["CW_AWS_ACCESS_KEY_ID"]
        del os.environ["CW_AWS_SECRET_ACCESS_KEY"]
