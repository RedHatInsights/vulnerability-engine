# pylint: disable=no-self-use
"""
Test suite for bounded executor.
"""

import logging as log

from common.bounded_executor import BoundedExecutor
from common.logging import get_logger


class TestBoundedExecutor:
    """Test suite"""

    @staticmethod
    def _executor_func_mock(number):
        logger = get_logger(__name__)
        logger.info(number)
        return number

    def test_executor_single(self):
        """Test executor as single task"""
        executor = BoundedExecutor(1)
        number = 1

        future = executor.submit(TestBoundedExecutor._executor_func_mock, number)
        res = future.result()

        assert res == number
        executor.shutdown()

    def test_executor_blocking(self, caplog):
        """Test executor if is blocking"""
        executor = BoundedExecutor(1)
        number = 1
        with caplog.at_level(log.INFO):
            future1 = executor.submit(TestBoundedExecutor._executor_func_mock, number)
            number = 2
            future2 = executor.submit(TestBoundedExecutor._executor_func_mock, number)
            res1 = future1.result()
            res2 = future2.result()

        assert res1 == 1
        assert res2 == 2

        assert "1" in caplog.messages[0]
        assert "2" in caplog.messages[1]
