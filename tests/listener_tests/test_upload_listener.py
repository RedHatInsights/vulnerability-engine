# -*- coding: utf-8 -*-
# pylint: disable=no-self-use
"""
Unit tests for listener module
"""
from listener.upload_listener import format_vmaas_request, db_import_system

# We should refactor upload_listener to be a class where db and other things
# are initialized in __init__() method.  This would allow us to override
# those things in unit tests here.

PACKAGE_LIST = ['package-a', 'package-b']
REPO_LIST = ['repo-c', 'repo-d']
MODULES_LIST = ['module-e', 'module-f']
RESULT_JSON = '{"package_list": ["package-a", "package-b"], ' \
              '"repository_list": ["repo-c", "repo-d"], ' \
              '"modules_list": ["module-e", "module-f"]}'

A_SYSTEM = {'inv-id': 'NEW-ID', 'rh-acct': 'NEW-ACCT', 's3-url': 'NEW-URL',
            'vmaas-json': 'NEW-JSON', 'managed': True}

class TestUploadListner:
    """Unit tests for vulnerability-listener."""

    def test_format_vmaas_request(self):
        """test_format_vmaas_request"""
        result = format_vmaas_request(PACKAGE_LIST, repo_list=REPO_LIST, modules_list=MODULES_LIST)
        assert result
        assert result == RESULT_JSON

    def test_import_system(self, pg_db_conn, monkeypatch):
        """Test importing a system not-in-the-db, followed by same so it's-already-there"""
        # new system
        (inserted, updated) = db_import_system(pg_db_conn, A_SYSTEM['inv-id'], A_SYSTEM['rh-acct'], A_SYSTEM['s3-url'],
                                               A_SYSTEM['vmaas-json'], A_SYSTEM['managed'])
        assert inserted
        assert not updated

        # And now it's an update
        (inserted, updated) = db_import_system(pg_db_conn, A_SYSTEM['inv-id'], A_SYSTEM['rh-acct'], A_SYSTEM['s3-url'],
                                               A_SYSTEM['vmaas-json'], A_SYSTEM['managed'])
        assert not inserted
        assert updated
