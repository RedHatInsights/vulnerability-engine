"""
Vulnerability manager tests - Admin Handler.
"""
from functools import reduce
import requests

from common.peewee_model import DB
from .vuln_testcase import FlaskTestCaseAdmin


class TestAdminManager(FlaskTestCaseAdmin):
    """Test suite for admin manager"""

    @staticmethod
    def _taskomatic_mock_put(path):

        class Response:
            """Response mock class"""
            def __init__(self, status_code):
                self.status_code = status_code

        jobs = ["db_metrics", "delete_systems", "rules_git_sync", "stale_systems",
                "usage_metrics"]
        res = reduce(lambda acc, job: True if acc else job in path, jobs, False)
        if not res:
            return Response(400)
        return Response(200)

    @staticmethod
    def _vmaas_sync_mock_put(path):
        if "/api/v1/sync" not in path:
            raise Exception("sync not called correctly")

    @staticmethod
    def _vmaas_re_evaluate_mock_put(path):
        if "/api/v1/re-evaluate" not in path:
            raise Exception("re-evaluation not called correctly")

    @staticmethod
    def _cve_delete_mock_put(path):
        if "/api/v1/cves" not in path:
            raise Exception("CVE deletion not called properly")

    def test_missing_in_inventory(self):
        """Test systems/missing_in_inventory endpoint."""
        count = self.vfetch("systems/missing_in_inventory")
        assert count.body == 1

    def test_taskomatic_run_correct_job(self, monkeypatch):
        """Test taskomatic/run/{job_name} endpoint with correct job"""
        monkeypatch.setattr(requests, "put", self._taskomatic_mock_put)
        res = self.vfetch("taskomatic/run/stale_systems", method="put")
        assert res.raw.status_code == 204

    def test_taskomatic_run_wrong_job(self, monkeypatch):
        """Test taskomatic/run/{job_name} endpoint with incorrect job"""
        monkeypatch.setattr(requests, "put", self._taskomatic_mock_put)
        res = self.vfetch("taskomatic/run/nonexisting_job", method="put")
        assert res.raw.status_code == 404

    def test_vmaas_sync_call(self, monkeypatch):
        """Test vmaas sync request call"""
        monkeypatch.setattr(requests, "put", self._vmaas_sync_mock_put)
        self.vfetch("vmaas/sync", method="put")

    def test_vmaas_re_evaluate_call(self, monkeypatch):
        """Test vmaas re-evaluation call"""
        monkeypatch.setattr(requests, "put", self._vmaas_re_evaluate_mock_put)
        self.vfetch("vmaas/re-evaluate", method="put")

    def test_delete_cve_call(self, monkeypatch):
        """Test delete cve call"""
        monkeypatch.setattr(requests, "delete", self._cve_delete_mock_put)
        self.vfetch("cves/CVE-2017-1", method="delete")

    def test_stats_deletion(self):
        """Test deletion of statistics"""
        self.vfetch("statistics/2080-01-01", method="delete")
        res = DB.execute_sql("select count(*) from usage_statistics")
        res = res.fetchall()[0][0]
        assert res == 0

    def test_queries(self):
        """Test running queries endpoint"""
        res = self.vfetch("database/queries")
        assert res.body == {"queries": []}
