"""Unit tests for status_handler"""
# pylint: disable=missing-docstring,too-many-public-methods,invalid-name

from .vuln_testcase import FlaskTestCase


class TestSystemHandler(FlaskTestCase):

    def test_systems(self):
        response = self.vfetch("systems").check_response()
        assert len(response.body.data) == 4

    def test_systems_cves_not_exists(self):
        self.vfetch("systems/INV-INVALID/cves").check_response(status_code=404)

    def test_systems_cves_not_evaluated(self):
        self.vfetch("systems/INV-ID00-0000-0000/cves").check_response(status_code=404)

    def test_systems_cves_evaluated(self):
        response = self.vfetch("systems/INV-ID00-0000-4444/cves").check_response()
        assert len(response.body.data) == 2

    def test_systems_cves_st_1(self):
        self.vfetch("systems/INV-ID00-0000-4444/cves?status_id=1,nan").check_response(status_code=400)

    def test_systems_cves_st_2(self):
        response = self.vfetch("systems/INV-ID00-0000-4444/cves?status_id=2").check_response()
        assert not response.body.data

    def test_systems_cves_st_3(self):
        response = self.vfetch("systems/INV-ID00-0000-4444/cves?status_id=3,4").check_response()
        assert len(response.body.data) == 2

    def test_opt_out_filtering(self):
        hidden = self.vfetch("systems?opt_out=true").check_response()
        assert not hidden.body.data
        visible = self.vfetch("systems?opt_out=false").check_response()
        all_systems = self.vfetch("systems").check_response()
        assert len(visible.body.data) == len(all_systems.body.data)

    def test_opt_out_invalid_params(self):
        self.vfetch("systems/INV-ID00-0000-4444/opt_out", data="", method="PATCH").check_response(status_code=400)
        self.vfetch("systems/INV-ID00-0000-4444/opt_out?value=123bla", data="", method="PATCH").check_response(
            status_code=400
        )
        self.vfetch("systems/IVALID-ID/opt_out?value=true", data="", method="PATCH").check_response(status_code=404)

    def test_opt_out(self):
        self.vfetch("systems/INV-ID00-0000-4444/opt_out?value=true", data="", method="PATCH")
        hidden = self.vfetch("systems?opt_out=true")
        assert len(hidden.body.data) == 1

        response = self.vfetch("systems/INV-ID00-0000-4444/cves").check_response(status_code=404)
        assert response.body.errors[0].detail == "inventory_id exists but is opted out"

        self.vfetch("systems/INV-ID00-0000-4444/opt_out?value=false", data="", method="PATCH")
        hidden = self.vfetch("systems?opt_out=true")
        assert not hidden.body.data
