# -*- coding: utf-8 -*-
# pylint: disable=no-self-use
"""
Unit tests for vmaas_sync module
"""
import logging
from common.database_handler import DatabaseHandler
from vmaas_sync.vmaas_sync import sync_cve_md
from ..scripts.vmaas_mock import CVES_RESPONSE

class TestVmaasSync:
    """Tests for vmaas_sync and friends"""

    def test_sync_cve_md_positive(self, pg_db_conn, monkeypatch, caplog):
        """Test calling sync_cve_md with vmaas responding with data"""
        monkeypatch.setattr(DatabaseHandler, 'get_connection',
                            lambda: pg_db_conn)

        monkeypatch.setattr('vmaas_sync.vmaas_sync.vmaas_post_request',
                            lambda endpoint, cve_request, session: CVES_RESPONSE)
        with caplog.at_level(logging.INFO):
            result = sync_cve_md()
            assert result
        assert caplog.records[0].msg == 'Syncing CVE metadata'
        assert caplog.records[1].msg.startswith('Downloading CVE metadata')
        assert caplog.records[2].msg.startswith('Importing CVE metadata')
        assert caplog.records[3].msg.startswith('Finished importing CVE metadata')
        assert caplog.records[4].msg == 'Finished syncing CVE metadata'
        caplog.clear()

    def test_sync_cve_md_negative(self, pg_db_conn, monkeypatch, caplog):
        """Test calling sync_cve_md with vmaas responding with nothing"""
        monkeypatch.setattr(DatabaseHandler, 'get_connection',
                            lambda: pg_db_conn)

        monkeypatch.setattr('vmaas_sync.vmaas_sync.vmaas_post_request',
                            lambda endpoint, cve_request, session: None)
        with caplog.at_level(logging.INFO):
            result = sync_cve_md()
            assert not result
        assert caplog.records[0].msg == 'Syncing CVE metadata'
        assert caplog.records[1].msg.startswith('Downloading CVE metadata')
        assert caplog.records[2].msg == 'Finished syncing CVE metadata'
