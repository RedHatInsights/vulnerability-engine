#!/usr/bin/env python3
"""
Mock of archive download server
"""
import sys

from tornado import httpserver, ioloop, web

ARCHIVES = {
    "insights-archive.tar.gz": "./tests/listener_tests/insights-archive.tar.gz",
    "insights-archive-no-packages.tar.gz": "./tests/listener_tests/insights-archive-no-packages.tar.gz",
    "non-archive.tar.gz": "./tests/listener_tests/non-archive.tar.gz"
}

class DownloadHandler(web.RequestHandler):
    """Download handler."""

    def data_received(self, chunk):
        pass

    def get(self, path):
        """Answer GET request."""
        if path in ARCHIVES:
            self.set_header("Content-Type", "application/octet-stream")
            with open(ARCHIVES[path], "rb") as open_file:
                self.write(open_file.read())
        else:
            self.set_status(404)
        self.finish()


APP = web.Application(
    [(r"/api/v1/download/(.+)", DownloadHandler)]
)


def main():
    """Run web server."""
    try:
        port = int(sys.argv[1])
    # pylint: disable=broad-except
    except Exception:
        port = 8080
    server = httpserver.HTTPServer(APP)
    server.listen(port)
    ioloop.IOLoop.current().start()


if __name__ == "__main__":
    main()
