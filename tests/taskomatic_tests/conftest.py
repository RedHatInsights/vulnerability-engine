# -*- coding: utf-8 -*-
# pylint:disable=missing-docstring,redefined-outer-name

import psycopg2
import pytest
from tornado.httpclient import AsyncHTTPClient
from aiohttp import web, test_utils

from common import database_handler

from taskomatic import taskomatic
from ..utils import restore_db


@pytest.fixture(scope='module')
def pg_db_conn(pg_db_mod):
    with database_handler.DatabasePool(1):
        conn = psycopg2.connect(**pg_db_mod.dsn())
        yield conn
        conn.close()


@pytest.fixture
def cleanup(request):
    def db_cleanup():
        restore_db(database_handler.pg_testing)
    request.addfinalizer(db_cleanup)


@pytest.fixture
async def taskomatic_server():
    app = taskomatic.TaskomaticApp()
    runner = web.AppRunner(app.app)
    await runner.setup()
    port = test_utils.unused_port()
    site = web.TCPSite(runner, "0.0.0.0", port)
    await site.start()

    yield f"http://localhost:{port}"

    await runner.cleanup()


@pytest.fixture()
def http_client():
    client = AsyncHTTPClient()
    yield client
    client.close()
