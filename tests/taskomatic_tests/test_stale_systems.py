"""
Unit tests for stale_systems taskomatic job
"""
import taskomatic.jobs.stale_systems as ss
from common.database_handler import DatabasePoolConnection


class TestStaleSystems:
    """
    Class holding all tests
    """

    @staticmethod
    def test_stale_systems(pg_db_conn, monkeypatch):
        """Test the stale systems marking"""
        cur = pg_db_conn.cursor()
        cur.execute(
            """SELECT count(id) from system_platform sp
                    WHERE when_deleted IS NULL
                      AND stale_warning_timestamp IS NOT NULL
                      AND stale = 'F'
                      AND now() > stale_warning_timestamp"""
        )
        to_mark = cur.fetchone()[0]
        assert to_mark == 2
        cur.execute(
            """SELECT count(id) from system_platform sp
                    WHERE when_deleted IS NULL
                      AND stale_warning_timestamp IS NOT NULL
                      AND stale = 'T'"""
        )
        already_stale = cur.fetchone()[0]
        assert already_stale == 1

        with DatabasePoolConnection() as conn:
            monkeypatch.setattr(ss, "get_conn", lambda: conn)
            ss.run()

        cur.execute(
            """SELECT count(id) from system_platform sp
                    WHERE when_deleted IS NULL
                      AND stale_warning_timestamp IS NOT NULL
                      AND stale = 'F'
                      AND now() > stale_warning_timestamp"""
        )
        staling = cur.fetchone()[0]
        assert staling == 0
        cur.execute(
            """SELECT count(id) from system_platform sp
                    WHERE when_deleted IS NULL
                      AND stale_warning_timestamp IS NOT NULL
                      AND stale = 'T'"""
        )
        stale = cur.fetchone()[0]
        assert stale == 3

        assert to_mark + already_stale == stale
