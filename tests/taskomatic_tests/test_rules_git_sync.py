"""
Unit tests for rules_git_sync taskomatic job
"""

from pathlib import Path
from os import path

from common.database_handler import DatabasePoolConnection
import taskomatic.jobs.rules_git_sync as rgs


class TestRulesGitSync:
    """
    Class holding all tests
    """

    @staticmethod
    def test_sync(pg_db_conn, monkeypatch):  # pylint: disable=unused-argument
        """Test rules sync"""
        tmpdir = path.join(Path(__file__).resolve().parent, "data")
        monkeypatch.setattr(rgs, "CONTENT_GIT_NAME", "insights-content-vulnerability")
        monkeypatch.setattr(rgs, "PLAYBOOKS_GIT_NAME", "insights-playbooks")

        with DatabasePoolConnection() as conn:
            monkeypatch.setattr(rgs, "get_conn", lambda: conn)
            rgs.sync(tmpdir, "xxee", "eexx")

        cur = pg_db_conn.cursor()

        cur.execute(
            """SELECT id, name, active, rule_only FROM insights_rule where name like 'CVE_123_456%' ORDER BY NAME"""
        )
        rows = cur.fetchall()

        assert len(rows) == 3

        assert rows[0][1] == "CVE_123_456"
        assert rows[0][2] == True  # pylint: disable=singleton-comparison
        assert rows[0][3] == True  # pylint: disable=singleton-comparison

        assert rows[1][1] == "CVE_123_456|CVE_123_456_DISABLED"
        assert rows[1][2] == False  # pylint: disable=singleton-comparison
        assert rows[1][3] == False  # pylint: disable=singleton-comparison

        assert rows[2][1] == "CVE_123_456|CVE_123_456_ENABLED"
        assert rows[2][2] == True  # pylint: disable=singleton-comparison
        assert rows[2][3] == False  # pylint: disable=singleton-comparison

        cur.execute("""SELECT cve, celebrity_name FROM cve_metadata WHERE cve = 'CVE-123-456'""")
        row = cur.fetchone()

        assert row is not None

        assert row[1] == "test1"

        cur.execute("""SELECT cve, celebrity_name FROM cve_metadata WHERE cve = 'CVE-2018-6'""")
        row = cur.fetchone()

        assert row is not None

        assert row[1] is None

        cur.close()
