# -*- coding: utf-8 -*-
# pylint: disable=invalid-name
"""
Schemas of responses.
"""
from schema import Optional, Or, Schema

_meta = {
    "page": int,
    "page_size": int,
    "total_items": int,
    "pages": int,
    "sort": str,
    "filter": str,
    "offset": int,
    "limit": int,
}

_links = {
    "first": str,
    "next": str,
    "previous": str,
    "last": str
}

_affected_system = {
    "type": "system",
    "id": str,
    "attributes": {
        "inventory_id": str,
        "status_id": int,
        "status_name": str,
        "satellite_managed": bool,
        "last_evaluation": str,
    },
}

_system = {
    "type": "system",
    "id": str,
    "attributes": {"satellite_managed": bool, "inventory_id": str,
                   "cve_count": int, "last_evaluation": str, "opt_out": bool},
}

_vulnerabilities_cve = {
    "type": "cve",
    "id": str,
    "attributes": {
        "systems_affected": int,
        "synopsis": str,
        "public_date": str,
        "impact": str,
        "description": str,
        "cvss2_score": str,
        "cvss3_score": str,
    },
}

_system_cve = {
    "type": "cve",
    "id": str,
    "attributes": {
        "synopsis": str,
        "public_date": str,
        "impact": str,
        "description": str,
        "cvss2_score": str,
        "cvss3_score": str,
        "status": str,
        "status_id": int,
    },
}

_vulnerabilities_meta = {
    "show_all": str,
    "cvss_from": Or("", float),
    "cvss_to": Or("", float),
    "public_from": str,
    "public_to": str,
}
_vulnerabilities_meta.update(_meta)

_vmaas_cves_data = {
    "impact": str,
    "public_date": str,
    "synopsis": str,
    "description": str,
    "modified_date": str,
    Optional("redhat_url"): str,
    Optional("cvss2_score"): str,
    "cvss3_score": str,
    Optional("secondary_url"): str,
    "cwe_list": [str],
    "errata_list": [str],
    "package_list": [str],
    Optional("cvss2_metrics"): str,
    "cvss3_metrics": str,
}

_cve = {"data": {"attributes": _vmaas_cves_data, "id": str, "type": "cve"}, "meta": {}}


_vulnerabilities_cves = {"meta": _vulnerabilities_meta, "links": _links, "data": Or([_vulnerabilities_cve], [])}
_system_cves = {"meta": _meta, "links": _links, "data": Or([_system_cve], [])}
_systems = {"meta": _meta, "links": _links, "data": Or([_system], [])}
_affected_systems = {"meta": _meta, "links": _links, "data": Or([_affected_system], [])}
_impacts = {"Important": int, "Moderate": int, "Critical": int, "Low": int}
_changes = {
    "since": Or(str, None),
    "new_vulnerabilities": {"count": int, "percentage": int, "direction": str},
    "remediated": {"count": int, "percentage": int, "direction": str},
    "newly_affected": {"count": int, "percentage": int, "direction": str},
}

cve = Schema(_cve)
vulnerabilities_cves = Schema(_vulnerabilities_cves)
systems = Schema(_systems)
affected_systems = Schema(_affected_systems)
system_cves = Schema(_system_cves)
impacts = Schema(_impacts)
changes = Schema(_changes)


SCHEMA_MAP = {
    "/affected_systems": affected_systems,  # /v1/cves/<cve>/affected_systems
    "/v1.0/cves/CVE-": cve,
    "/v1.0/vulnerabilities/cves": vulnerabilities_cves,
    "/cves": system_cves,  # /v1/systems/<system_id>/cves
    "/v1.0/systems": systems,
    "/v1.0/vulnerabilities/impacts": impacts,
    "/v1.0/vulnerabilities/changes": changes,
}
