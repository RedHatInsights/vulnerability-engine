# -*- coding: utf-8 -*-
# pylint: disable=missing-docstring
"""
Vulnerability manager tests.
"""
import os
import sys

from .vuln_testcase import VulnHTTPTestCase

_CURDIR = os.path.dirname(os.path.abspath(__file__))

sys.path.insert(0, os.path.join(_CURDIR, os.pardir, "manager"))


class ManagerHTTPTestCase(VulnHTTPTestCase):
    def get_app(self):
        from manager import main

        return main.ServerApplication()


class TestSystemHandler(ManagerHTTPTestCase):
    def test_apidoc(self):
        response = self.vfetch("apispec").check_response()
        assert response.body.info.title == "Vulnerability Engine Manager"

    def test_version(self):
        response = self.vfetch("version").check_response()
        assert response.body == "unknown"

    def test_cves_affected_systems(self):
        response = self.vfetch("cves/CVE-2016-0800/affected_systems").check_response()
        assert len(response.body.data) == 7

    def test_systems(self):
        response = self.vfetch("systems").check_response()
        assert len(response.body.data) == 7

    def test_systems_cves(self):
        response = self.vfetch("systems/INV-ID00-0000-0000/cves").check_response()
        assert len(response.body.data) == 2

    def test_vulnerabilities_cves(self):
        response = self.vfetch("vulnerabilities/cves").check_response()
        assert len(response.body.data) == 14

    def test_vulnerabilities_impacts(self):
        self.vfetch("vulnerabilities/impacts").check_response()

    def test_vulnerabilities_changes(self):
        response = self.vfetch("vulnerabilities/changes").check_response()

        new = response.body.new_vulnerabilities
        assert new.count == 5
        assert new.percentage == 9
        assert new.direction == "up"

        remediated = response.body.remediated
        assert remediated.count == 21
        assert remediated.percentage == 50
        assert remediated.direction == "down"

        affected = response.body.newly_affected
        assert affected.count == 2
        assert affected.percentage == 3
        assert affected.direction == "up"
