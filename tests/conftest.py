# -*- coding: utf-8 -*-
# pylint:disable=missing-docstring

import os
import tempfile

import pytest
from peewee import SqliteDatabase

from common import peewee_database

peewee_database.DB = SqliteDatabase(None)

_CURDIR = os.path.dirname(os.path.abspath(__file__))

SQLDATA = os.path.join(_CURDIR, "data", "ve_db_dev_data.sql")


def init_db(db_file):
    """Initializes SQLite db for peewee."""
    from common import peewee_model

    model_names = (
        "SystemPlatform",
        "VulnerabilitySource",
        "CveImpact",
        "Status",
        "CveMetadata",
        "SystemVulnerabilities",
        "ProdsecRule",
        "SysVulnRulesResults",
    )
    models = [getattr(peewee_model, mname) for mname in model_names]

    database = peewee_database.DB
    open(db_file, "a").close()
    database.init(db_file)

    database.connect()
    database.create_tables(models)

    with open(SQLDATA) as data:
        sql = data.read()
    database.cursor().executescript(sql)

    database.close()

    return database


# pylint: disable=invalid-name
@pytest.fixture(scope="session", autouse=True)
def db():
    with tempfile.TemporaryDirectory() as tmpdirname:
        yield init_db("{}/vulnerability.db".format(tmpdirname))
