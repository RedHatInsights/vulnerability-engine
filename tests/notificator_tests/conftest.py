"""
Fixtures for notificator tests
"""
import pytest
import asyncpg

from aiohttp import web, test_utils
from tornado.httpclient import AsyncHTTPClient

from notificator.app import CacheHandler, create_notificator_app


@pytest.fixture(scope="function")
async def asyncpg_pool(event_loop, pg_db_func):
    """Creates asyncpg pool fixture"""
    dsn = pg_db_func.dsn()
    dsn_str = f"postgres://{dsn['user']}@{dsn['host']}:{dsn['port']}/{dsn['database']}"

    pool = await asyncpg.create_pool(
        dsn=dsn_str,
        loop=event_loop,
    )
    yield pool
    await pool.close()


@pytest.fixture
async def notificator_server():
    """Creates notificator app server"""
    app = create_notificator_app(None, [(r"/api/v1/cache", CacheHandler)])
    runner = web.AppRunner(app)
    await runner.setup()
    port = test_utils.unused_port()
    site = web.TCPSite(runner, "0.0.0.0", port)
    await site.start()

    yield f"http://localhost:{port}"

    await runner.cleanup()


@pytest.fixture()
def http_client():
    """Http client fixture"""
    client = AsyncHTTPClient()
    yield client
    client.close()
